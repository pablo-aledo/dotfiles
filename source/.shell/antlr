test_grammar_with(){
    grammarfile=$(ls | grep '.g$' | head -n1)
    vim '+set number' $1 $grammarfile
    echo "====="
    nl -ba $1
    echo "====="
    antlr4 -Dlanguage=Python3 -no-listener -visitor $grammarfile
    cat $1 | python3 test.py
}

test_grammar_all(){
    grammarfile=$(ls | grep '.g$' | head -n1)
    antlr4 -Dlanguage=Python3 -no-listener -visitor $grammarfile
    \mv oks prevoks
    find tests -type f | sort | while read line
    do
        ( cat $line | python3 test.py 2>&1 ) > /tmp/output
        [ "$(cat /tmp/output)" != '' ] && color='\e[31m'
        [ "$(cat /tmp/output)"  = '' ] && color='\e[32m'
        [ $color = '\e[32m' ] && echo $line >> oks
        [ $color = '\e[31m' ] && [ "$(cat prevoks | grep -F $line)" != "" ] && color='\e[41m'
        [ $color = '\e[31m' ] && expl="$(grep -F "$line" reason | cut -d: -f2 | tail -n1)" || expl=""
        echo "$color $line \e[0m $expl"
    done
}

test_visitor_with(){
    grammarfile=$(ls | grep '.g$' | head -n1)
    vim '+set number' Visitor.py $1 $grammarfile
    echo "====="
    nl -ba $1
    echo "====="
    antlr4 -Dlanguage=Python3 -no-listener -visitor $grammarfile
    cat $1 | python3 test.py | tee /tmp/output
}

test_visitor_all(){
    grammarfile=$(ls | grep '.g$' | head -n1)
    antlr4 -Dlanguage=Python3 -no-listener -visitor $grammarfile
    \mv oks prevoks
    find tests -type f | sort | while read line
    do
        ( cat $line | python3 test.py 2>&1 ) > /tmp/output
        [   -e goldresults/$line ] && [ "$(md5sum /tmp/output | awk '{print $1}')" != "$(md5sum goldresults/$line | awk '{print $1}')" ] && color='\e[31m'
        [   -e goldresults/$line ] && [ "$(md5sum /tmp/output | awk '{print $1}')"  = "$(md5sum goldresults/$line | awk '{print $1}')" ] && color='\e[32m'
        [ ! -e goldresults/$line ] && color='\e[33m'
        [ $color = '\e[32m' ] && echo $line >> oks
        [ $color = '\e[31m' ] && [ "$(cat prevoks | grep -F $line)" != "" ] && color='\e[41m'
        [ $color = '\e[31m' ] && expl="$(grep -F "$line" reason | cut -d: -f2 | tail -n1)" || expl=""
        echo "$color $line \e[0m $expl"
    done
}