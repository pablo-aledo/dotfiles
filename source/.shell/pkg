INSTALLERS_FOLDER=$(dirname $(readlink -f $0))/../../pkg
[ -e /media/DATA/Work/dotfiles/data/repository ] && REPOSITORY_FOLDER=/media/DATA/Work/dotfiles/data/repository/
[ -e ~/repository ] && REPOSITORY_FOLDER=~/repository/

distr(){
	if [ $# -eq 1 ]
	then
		echo 'distr(){ echo ' $1 '}' > /tmp/distr; source /tmp/distr
		return
	fi

	[ -e /usr/local/bin/babun ] && echo babun && return
	[ -e /etc/centos-release ] && cat /etc/centos-release | sed 's/ Linux release \(.\).*/_\1/g' && return
	[ -e /etc/openwrt_version ] && echo -n openwrt_ && cat /etc/openwrt_version | sed 's/\.//g' && return
    [ -e /etc/os-release ] && [ "$(cat /etc/os-release | grep 'Red Hat')" != "" ] && cat /etc/os-release | grep PRETTY_NAME | sed 's/.*Red Hat Enterprise Linux[^0-9]*\([0-9]*\).*/RedHat\1/g' && return
	[ -e /usr/bin/arch ] && [ `arch` = "armv7l" ] && architecture="_armv7l"
	head -n1 /etc/issue | sed \
		-e "s/Ubuntu 14\.04 LTS \\\\n \\\\l/Ubuntu_14_04/g" \
		-e "s/Ubuntu 14\.04\.2 LTS \\\\n \\\\l/Ubuntu_14_04/g" \
		-e "s/Ubuntu 14\.04\.3 LTS \\\\n \\\\l/Ubuntu_14_04$architecture/g" \
		-e "s/Ubuntu 14\.04\.4 LTS \\\\n \\\\l/Ubuntu_14_04$architecture/g" \
		-e "s/Ubuntu 14\.04\.5 LTS \\\\n \\\\l/Ubuntu_14_04$architecture/g" \
		-e "s/Ubuntu 16\.04\.. LTS \\\\n \\\\l/Ubuntu_16_04$architecture/g" \
		-e "s/Ubuntu 18\.04\.. LTS \\\\n \\\\l/Ubuntu_18_04/g" \
		-e "s/Linux Mint 17 Qiana \\\\n \\\\l/Mint_17/g" \
		-e "s/Debian GNU\/Linux 8 \\\\n \\\\l/Debian_8/g" \
		-e "s/Kali GNU\/Linux Rolling \\\\n \\\\l/Kali_rolling/g" \
		-e "s/Arch.*/Arch/g"
}

pre_install(){

    if [ "$(distr)" = "Arch" ]
    then
        sudo pacman -Syy
        sudo pacman -S --noconfirm archlinux-keyring
        sudo pacman -S --noconfirm which
        sudo pacman -S --noconfirm glibc
    fi

}

apt_download(){
	sudo apt-get clean
	#sudo apt-get install --download-only $list
	sudo apt-get install $*
	mkdir $REPOSITORY_FOLDER/`distr`/$1
	cp /var/cache/apt/archives/*.deb $REPOSITORY_FOLDER/`distr`/$1/
	echo 'sudo dpkg -i *.deb' > $REPOSITORY_FOLDER/`distr`/$1/install.sh
}

envpkg(){
	[ "$( basename "`which $1`" )" = "$1" ] && return 0
	[ "$( basename "`which $1`" )" = "$1" ] || return 1
}

pkg(){

cmd=$1
shift
list=$*

[ $cmd = "install" ] && [ $# -gt 1 ] && for a in $*; do pkg install $1; shift; done

ping -c1 8.8.8.8 2>/dev/null >/dev/null || \
	[ $cmd = "install" ] && \
	[ -e "$REPOSITORY_FOLDER/`distr`/$1/install.sh" ] && \
		( cd "$REPOSITORY_FOLDER/`distr`/$1/" && source install.sh ) && return;

if [ $cmd = "install" ] && [ -e "$INSTALLERS_FOLDER/`distr`/$1/install.sh" ]
then
	( cd $INSTALLERS_FOLDER/`distr`/$1/; source install.sh )
	return;
fi

if [ $cmd = "install" ] && [ -e "~/Dotfiles/pkg/`distr`/$1/install.sh" ]
then
	( cd ~/Dotfiles/pkg/`distr`/$1/; source install.sh )
	return;
fi

if [ $cmd = "install" ] && [ -e "~/.dotfiles/pkg/`distr`/$1/install.sh" ]
then
	( cd ~/.dotfiles/pkg/`distr`/$1/; source install.sh )
	return;
fi

if ( [ $cmd = "install" ]  && `envpkg apt-get` ) then sudo apt-get install -y --force-yes $list; return; fi
if ( [ $cmd = "install" ]  && `envpkg yay`     ) then yay -S $list; return; fi
if ( [ $cmd = "install" ]  && `envpkg pacman`  ) then sudo pacman -S --noconfirm $list; return; fi
if ( [ $cmd = "install" ]  && `envpkg emerge`  ) then sudo emerge $list; return; fi
if ( [ $cmd = "install" ]  && `envpkg yum`     ) then sudo yum -y install $list; return; fi
if ( [ $cmd = "install" ]  && `envpkg zypper`  ) then sudo zypper --non-interactive install $list; return; fi
if ( [ $cmd = "install" ]  && `envpkg urpmi`   ) then sudo urpmi --auto $list; return; fi
if ( [ $cmd = "install" ]  && `envpkg tce-load`) then tce-load -wi $list; return; fi
if ( [ $cmd = "install" ]  && `envpkg pact`    ) then pact install $list; return; fi
if ( [ $cmd = "install" ]  && `envpkg apt-cyg` ) then apt-cyg install $list; return; fi
if ( [ $cmd = "install" ]  && `envpkg cyg-apt` ) then cyg-apt install $list; return; fi
if ( [ $cmd = "install" ]  && `envpkg brew`    ) then brew install $list; return; fi
if ( [ $cmd = "install" ]  && `envpkg eopkg`   ) then sudo eopkg install -y $list; return; fi
if ( [ $cmd = "install" ]  && `envpkg slax`    ) then slax download $list && slax activate *$list.sb; return; fi
if ( [ $cmd = "install" ]  && `envpkg opkg`    ) then opkg install $list; return; fi
if ( [ $cmd = "install" ]  && `envpkg usm`     ) then usm -g $list; return; fi
if ( [ $cmd = "install" ]  && `envpkg apk`     ) then apk add $list; return; fi
if ( [ $cmd = "install" ]  && `envpkg snap`    ) then sudo snap install $list; return; fi

if ( [ $cmd = "remove" ]   && `envpkg apt-get` ) then sudo apt-get remove -y $list; return; fi
if ( [ $cmd = "remove" ]   && `envpkg yay`     ) then yay -Rs $list; return; fi
if ( [ $cmd = "remove" ]   && `envpkg pacman`  ) then sudo pacman -Rs --noconfirm $list; return; fi
if ( [ $cmd = "remove" ]   && `envpkg emerge`  ) then sudo emerge --depclean $list; return; fi
if ( [ $cmd = "remove" ]   && `envpkg yum`     ) then sudo yum --depclean $list; return; fi
if ( [ $cmd = "remove" ]   && `envpkg zypper`  ) then sudo zypper remove $list; return; fi
if ( [ $cmd = "remove" ]   && `envpkg urpme`   ) then sudo urpme $list; return; fi
if ( [ $cmd = "remove" ]   && `envpkg pact`    ) then pact remove $list; return; fi
if ( [ $cmd = "remove" ]   && `envpkg apt-cyg` ) then apt-cyg remove $list; return; fi
if ( [ $cmd = "remove" ]   && `envpkg cyg-apt` ) then cyg-apt remove $list; return; fi
if ( [ $cmd = "remove" ]   && `envpkg brew`    ) then brew remove --force $list; return; fi
if ( [ $cmd = "remove" ]   && `envpkg eopkg`   ) then sudo eopkg remove $list; return; fi
if ( [ $cmd = "remove" ]   && `envpkg slax`    ) then slax deactivate $list; return; fi
if ( [ $cmd = "remove" ]   && `envpkg opkg`    ) then opkg remove $list; return; fi
if ( [ $cmd = "remove" ]   && `envpkg apk`     ) then apk del $list; return; fi

if ( [ $cmd = "search" ]   && `envpkg apt-get` ) then apt-cache search $list; return; fi
if ( [ $cmd = "search" ]   && `envpkg yay`     ) then yay -Si $list; return; fi
if ( [ $cmd = "search" ]   && `envpkg pacman`  ) then pacman -Ss $list; return; fi
if ( [ $cmd = "search" ]   && `envpkg emerge`  ) then emerge -S $list; return; fi
if ( [ $cmd = "search" ]   && `envpkg yum`     ) then yum search $list; return; fi
if ( [ $cmd = "search" ]   && `envpkg zypper`  ) then zypper search $list; return; fi
if ( [ $cmd = "search" ]   && `envpkg urpmq`   ) then urpmq $list; return; fi
if ( [ $cmd = "search" ]   && `envpkg tce-ab`  ) then tce-ab; return; fi
if ( [ $cmd = "search" ]   && `envpkg pact`    ) then pact find $list; return; fi
if ( [ $cmd = "search" ]   && `envpkg apt-cyg` ) then apt-cyg show $list; return; fi
if ( [ $cmd = "search" ]   && `envpkg cyg-apt` ) then cyg-apt search $list; return; fi
if ( [ $cmd = "search" ]   && `envpkg brew`    ) then brew search $list; return; fi
if ( [ $cmd = "search" ]   && `envpkg eopkg`   ) then eopkg search $list; return; fi
if ( [ $cmd = "search" ]   && `envpkg slax`    ) then slax search $list; return; fi
if ( [ $cmd = "search" ]   && `envpkg opkg`    ) then opkg list | grep $list | cut -d" " -f1; return; fi
if ( [ $cmd = "search" ]   && `envpkg usm`     ) then usm -s $list; return; fi
if ( [ $cmd = "search" ]   && `envpkg apk`     ) then apk search $list; return; fi

if ( [ $cmd = "download" ] && `envpkg apt-get` ) then apt_download $list; return; fi
if ( [ $cmd = "download" ] && `envpkg pacman`  ) then sudo pacman -Sw $list; return; fi
if ( [ $cmd = "download" ] && `envpkg emerge`  ) then sudo emerge --fetchonly $list; return; fi
if ( [ $cmd = "download" ] && `envpkg yum`     ) then sudo yumdownloader $list; return; fi
if ( [ $cmd = "download" ] && `envpkg apt-cyg` ) then apt-cyg download $list; return; fi
if ( [ $cmd = "download" ] && `envpkg cyg-apt` ) then cyg-apt download $list; return; fi
if ( [ $cmd = "download" ] && `envpkg slax`    ) then slax download $list; return; fi
if ( [ $cmd = "download" ] && `envpkg usm`     ) then usm -g $list; return; fi

if ( [ $cmd = "update" ]   && `envpkg apt-get` ) then sudo apt-get update; return; fi
if ( [ $cmd = "update" ]   && `envpkg yay`     ) then yay -Sy; return; fi
if ( [ $cmd = "update" ]   && `envpkg pacman`  ) then sudo pacman -Syy; return; fi
if ( [ $cmd = "update" ]   && `envpkg emerge`  ) then sudo layman -f; return; fi
if ( [ $cmd = "update" ]   && `envpkg yum`     ) then sudo yum check-update; return; fi
if ( [ $cmd = "update" ]   && `envpkg zypper`  ) then sudo zypper refresh; return; fi
if ( [ $cmd = "update" ]   && `envpkg urpmi`   ) then sudo urpmi.update -a; return; fi
if ( [ $cmd = "update" ]   && `envpkg pact`    ) then pact update; return; fi
if ( [ $cmd = "update" ]   && `envpkg apt-cyg` ) then apt-cyg update; return; fi
if ( [ $cmd = "update" ]   && `envpkg brew`    ) then brew update; return; fi
if ( [ $cmd = "update" ]   && `envpkg eopkg`   ) then sudo eopkg update-repo; return; fi
if ( [ $cmd = "update" ]   && `envpkg opkg`    ) then opkg update; return; fi
if ( [ $cmd = "update" ]   && `envpkg usm`     ) then usm -u all; return; fi
if ( [ $cmd = "update" ]   && `envpkg apk`     ) then apk update; return; fi

if ( [ $cmd = "Update" ]   && `envpkg pacman`  ) then sudo pacman -Syu; return; fi

if ( [ $cmd = "clean" ]    && `envpkg apt-get` ) then sudo apt-get clean; return; fi
if ( [ $cmd = "clean" ]    && `envpkg pacman`  ) then sudo pacman -Sc; return; fi
if ( [ $cmd = "clean" ]    && `envpkg yum`     ) then sudo yum clean; return; fi
if ( [ $cmd = "clean" ]    && `envpkg brew`    ) then brew cleanup -s; return; fi
if ( [ $cmd = "clean" ]    && `envpkg eopkg`   ) then sudo eopkg delete-cache; return; fi

}

