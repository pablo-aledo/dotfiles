alias Tail='stdbuf -i0 -o0 -e0 \tail'
alias autorun='find | entr'
alias lh='ls -lh'
alias lt='ls -lht'
alias ltr='ls -lhtr'
alias minikube='sudo /usr/local/bin/minikube'
alias dfh='df -h'

dfhc(){
    df -h | sed \
        -e "s/ \([0-9]%\)/0\1/g" \
        -e "s/\([0-8].%\)/$(echo '\e[32m')\1$(echo '\e[0m')/g" \
        -e "s/\([8-9].%\)/$(echo '\e[33m')\1$(echo '\e[0m')/g" \
        -e "s/\([9-9].%\)/$(echo '\e[31m')\1$(echo '\e[0m')/g" \
        -e "s/0\([0-9]%\)/ \1/g"
}

alias make='make -j$(nproc)'
alias mdp='TERM=xterm-256color /usr/bin/mdp'
alias docker_wd='docker run -it -v $PWD:/workdir -w /workdir'
alias docker_gr='docker run -it -v /tmp/.X11-unix:/tmp/.X11-unix -e DISPLAY=unix$DISPLAY'
alias detach='disown $(jobs -l | awk "{print \$6}")'
alias attach='reptyr'
alias watch='watch '
alias cdate='date +%y%m%d-%H%M%S'
alias wcat='sed "s/^\(.\{$(tput cols)\}\).*/\1/g"'
f(){ echo find -iname "'*$1*'" | bash ; }
F(){
    [ $# = 1 ] && grep -Rin "$1" ;
    [ $# = 2 ] && grep -Rin "$1" $( find -iname "*.$2" );
}
FF(){
    [ $# = 1 ] && grep -Rin "$1" | cut -d':' -f1 | sort | uniq | grep -v 'Binary file' ;
    [ $# = 2 ] && grep -Rin "$1" $( find -iname "*.$2" ) | cut -d':' -f1 | sort | uniq | grep -v 'Binary file' ;
}
FV(){
    [ $# = 1 ] && grep -Rin "$1" | cut -d':' -f1 | sort | uniq | grep -v 'Binary file' | xargs vim "+/$1" ; reset ;
    [ $# = 2 ] && grep -Rin "$1" $( find -iname "*.$2" ) | cut -d':' -f1 | sort | uniq | grep -v 'Binary file' | xargs vim "+/$1" ; reset ;
}
wdfh(){
    [ $# -eq 0 ] && watch -n1 "df -h"
    [ $# -eq 1 ] && watch -n1 "df -h | grep $1"
}
alias grunner='sudo DOCKER_IMAGE=golang:1.10 gitlab-runner exec docker go_test'
alias docker-compose='sudo /usr/local/bin/docker-compose'
alias Xargs='xargs -d"\n" -n1'
alias myhist='history | grep -v "^[0-9]*\*"'
alias 2x2=videos_2x2server
jdebug="-agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=8000"

alias avl='shc avl; xdotool key 6; sleep 1; shcw'
alias unstar='shc unstar; xdotool key 6; sleep 1; shcw'
changeip_loop(){
    tmux ls | grep -v avxmail | grep -v night | grep -v vnc | grep -v rates | grep -v rssmail | grep -v rsswatch | grep -v space | grep -v trape
    rm -f /tmp/changeip_pause; sleep 5; touch /tmp/changeip_pause
    sleep $(( 2 * 60 )); sudo killall noip2; sudo noip2
}

alias k='sudo kubectl'
pod(){ k get pods | grep -v Terminating | grep -v Evicted | grep -i $1 | cut -d" " -f1 | tail -n1; }
pods(){ k get pods | tail -n+2 | grep -i $1 | cut -d" " -f1; }
deployment(){ k get deployments | cut -d" " -f1 | grep -i $1 | tail -n1; }
alias kp='k get pods | grep -v Terminating'
kshell(){ k exec -it $1 /bin/bash ; }
alias wp='watch -n1 "sudo kubectl get pods | grep -v Terminating"'

alias helm='sudo helm'
alias hn='helm list | grep -v NAME | awk "{print \$1}" | grep'
hd(){ helm delete --purge $(hn $1); }

alias akslogin='az aks get-credentials --resource-group $1 --name $2 --admin';

alias                pvim='/usr/bin/vim +":set nopaste|:set ignorecase smartcase|:let mapleader = \",\"|:imap jj <ESC>|:map <Space><Space> /|:map <Space> :|:map > :n<cr>|:map < :N<cr>|:map <C-b> <C-v>|:map <f2> @q" '
alias              pnvim='/usr/bin/nvim +":set nopaste|:set ignorecase smartcase|:let mapleader = \",\"|:imap jj <ESC>|:map <Space><Space> /|:map <Space> :|:map > :n<cr>|:map < :N<cr>|:map <C-b> <C-v>|:map <f2> @q" '
alias uvim='HOME=/dev/null /usr/bin/vim +":set nopaste|:set ignorecase smartcase|:let mapleader = \",\"|:imap jj <ESC>|:map <Space><Space> /|:map <Space> :|:map > :n<cr>|:map < :N<cr>|:map <C-b> <C-v>|:map <f2> @q" '

tailf(){
    while [ ! -e "$1" ]
    do
        sleep 1
    done
    tail -9999f "$1"
}

dupl2(){
    cat | while read line;
    do
        echo -n "'"$line"'"
        echo -n ' '
        echo -n "'"$(echo $line | sed $1)"'"
        echo
    done
}

dupl3(){
    cat | while read line;
    do
        line1=$(echo -n "'"$line"'")
        line2=$(echo -n "'"$(echo $line | sed $1)"'")
        [ "$line1" != "$line2" ] && echo "$line1 $line2"
    done
}

dupl4(){
    cat | while read line;
    do
        line1="$line"
        line2="$(echo $line | sed $1)"
        [ "$line1" != "$line2" ] && [ ! -e "$line2" ] && echo "'"$line1"'" "'"$line2"'"
    done
}

alias startrdp='shc; distr remote; export mouseover_debug=true; pkg install startrdp'
alias dupl="sed \"s/^\(.*\)$/'\1' '\1'/g\""
alias ddprogress='sudo killall -USR1 dd'
Watch(){
echo watch '"'zsh -c "'"source ~/.shell';' $*"'"'"' > /tmp/watchcmd
source /tmp/watchcmd
}

alias cdn='cd "$(find .. -maxdepth 1 -type d | sed "s|^...||g" | sort -g | grep -A1 -F -x "$(basename "$PWD")" | tail -n1 | sed "s|^|../|g")"'
alias Xclip='xclip -sel clip'
alias ncdex='ncdu ~ --exclude learning --exclude servers --exclude .Trash'

gradle_run(){
    bash -c "./gradlew run -q --args=\"${*@Q}\""
}

alias wl4dl='watch -tn1 "find /tmp/ -maxdepth 1 -name \"lock*\" -mmin +1"'
alias wavline='watch -tn1 "cat /tmp/avl_line"'

ws2files(){
    watch -t -n1 'termsize=$(stty size | awk "{print \$1 - 1 , \$2 - 1}"); tail -n$(echo $termsize | cut -d" " -f1) /tmp/s2files | cut -c -$(echo $termsize | cut -d" " -f2)'
}
ws2link(){
    watch -t -n1 'termsize=$(stty size | awk "{print \$1 - 1 , \$2 - 1}"); tail -n$(echo $termsize | cut -d" " -f1) /tmp/s2link | cut -c -$(echo $termsize | cut -d" " -f2)'
}
wtail(){
    watch -t -n1 'termsize=$(stty size | awk "{print \$1 - 1 , \$2 - 1}"); tail -n$(echo $termsize | cut -d" " -f1) '"$1"' | cut -c -$(echo $termsize | cut -d" " -f2)'
}
wtailc(){
    watch -t -n1 'termsize=$(stty size | awk "{print \$1 - 1 , \$2 - 1}"); tail -n$(echo $termsize | cut -d" " -f1) '"$1"' | cut -c -$(echo $termsize | cut -d" " -f2) | sort -u | column -t -s"|" | sed "s/^===== 0 /===== /g"'
}

ytdlmp3(){
    yt-dlp -x --audio-format mp3 $*
}

ytdlmp4(){
    yt-dlp --no-mtime -f 'bestvideo[ext=mp4]+bestaudio[ext=m4a]/mp4' $*
}

ytdllist(){
    yt-dlp "$1" --flat-playlist -j | jq -r .url
}

alias winpython='winpty python.exe'

vimmarks(){
    cat marks.txt \
    | awk '{print ":e " $1; print ":normal gg"$2"jk"; print ":normal m"$3; print ""}' \
    > marks.so
}

Sgrep(){
    [ -e ${2}_sorted ] || LC_ALL=C sort $2 -o ${2}_sorted
    LC_ALL=C /bin/sgrep $1 ${2}_sorted
}

gdbstack(){
sudo gdb -p $1 -ex 'set pagination off' -ex 'set confirm off' -ex 'bt full' -ex q
}

ksplit(){
cat $1 > /tmp/ksplit
cat /tmp/ksplit | grep -v $2
cat /tmp/ksplit | grep $2
}

ghdl(){
    if [ $# = 1 ]
    then
        ghdl $(echo $1 | cut -d/ -f4) $(echo $1 | cut -d/ -f5) $(echo $1 | cut -d / -f7)
        return
    fi

    if [ $# = 4 ]
    then
        folder=$1
        shift
    else
        folder=$(distr)
    fi

    mkd ~/.dotfiles/pkg/$folder/"$2"
    wget https://github.com/"$1"/"$2"/archive/refs/heads/"$3".zip
    unzip "$3.zip"
    [ -e "$2"-"$3"/README.md ] && cp "$2"-"$3"/README.md install.sh
    [ -e "$2"-"$3"/readme.md ] && cp "$2"-"$3"/readme.md install.sh
    find -maxdepth 1 -mindepth 1 -type d | xargs rm -fr
}

alias Column='column -t -s"|"'

Gnuplot(){
    cat | gnuplot -p -e 'plot "-" using 1:2 with lines; pause mouse close'
}

alias Xterm='xterm -ti vt340 -bg black -fg white'
imgsixel(){ convert  $1  -geometry 800x480  sixel:- }
alias pstlsof='pstree -p | grep $(lsof /home/pablo/NAS | tail -n1 | awk "{print \$2}")'
alias SortG='sed "s/\([^0-9]*\([0-9]*\).*\)/\2 \1/g" | sort -g | sed "s/[^ ]* //g"'
