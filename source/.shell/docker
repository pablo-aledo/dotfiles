DOCKER_REPO_PREFIX=jess
alias docker='sudo -E docker'
alias dive="docker run -ti --rm  -v /var/run/docker.sock:/var/run/docker.sock wagoodman/dive"
alias runlike="docker run --rm -v /var/run/docker.sock:/var/run/docker.sock assaflavie/runlike"

docker_clean(){

    docker system prune --force
    docker system prune --all --force --volumes

	###################################################################################
        #       https://gist.github.com/bastman/5b57ddb3c11942094f8d0a97d461b430          #
	###################################################################################

	# delete volumes
	# // see: https://github.com/chadoe/docker-cleanup-volumes
	
	docker volume rm $(docker volume ls -qf dangling=true)
	docker volume ls -qf dangling=true | xargs -r docker volume rm
	
	# delete networks
	
	docker network ls  
	docker network ls | grep "bridge"   
	docker network rm $(docker network ls | grep "bridge" | awk '/ / { print $1 }')
	
	# remove docker images
	# // see: http://stackoverflow.com/questions/32723111/how-to-remove-old-and-unused-docker-images
	
	docker images
	docker rmi -f $(docker images --filter "dangling=true" -q --no-trunc)
	
	docker images | grep "none"
	docker rmi -f $(docker images | grep "none" | awk '/ / { print $3 }')
	
	# remove docker containers
	# // see: http://stackoverflow.com/questions/32723111/how-to-remove-old-and-unused-docker-images
	
	docker ps
	docker ps -a
	docker rm $(docker ps -qa --no-trunc --filter "status=exited")
	
	# Resize disk space for docker vm
	# docker-machine create --driver virtualbox --virtualbox-disk-size "40000" default

	###################################################################################
	#               https://www.calazan.com/docker-cleanup-commands/                  #
	###################################################################################

	#Kill all running containers

	docker kill $(docker ps -q)

	#Delete all stopped containers (including data-only containers)

	docker rm $(docker ps -a -q)

	#Delete all 'untagged/dangling' (<none>) images

	docker rmi -f $(docker images -q -f dangling=true)

	#Delete ALL images

	docker rmi -f $(docker images -q)

	#It might also be useful to create bash aliases for these commands, for example:
	# ~/.bash_aliases

	# Kill all running containers.
	alias dockerkillall='docker kill $(docker ps -q)'

	# Delete all stopped containers.
	alias dockercleanc='printf "\n>>> Deleting stopped containers\n\n" && docker rm $(docker ps -a -q)'

	# Delete all untagged images.
	alias dockercleani='printf "\n>>> Deleting untagged images\n\n" && docker rmi -f $(docker images -q -f dangling=true)'

	# Delete all stopped containers and untagged images.
	alias dockerclean='dockercleanc || true && dockercleani'

	[ -e /usr/bin/kubectl ] && sudo kubectl delete pods,services --all

    # https://gist.github.com/superseb/2cf186726807a012af59a027cb41270d

    docker rm -f $(docker ps -qa)
    docker volume rm $(docker volume ls -q)
    cleanupdirs="/var/lib/etcd /etc/kubernetes /etc/cni /opt/cni /var/lib/cni /var/run/calico /opt/rke"
    for dir in ${(z)cleanupdirs}; do
      echo "Removing $dir"
      sudo rm -rf $dir
    done

}

docker_stop(){
	docker kill $(docker ps -q)
}

docker_attach(){
    docker attach --sig-proxy=false $*
}

docker_latex(){
	[ -e /usr/bin/docker ] || pkg install docker
	[ -e /usr/bin/docker ] && sudo docker run --rm -it -v $(pwd):/source schickling/latex $*
}

del_stopped(){
	local name=$1
	local state
	state=$(docker inspect --format "{{.State.Running}}" "$name" 2>/dev/null)

	if [[ "$state" == "false" ]]; then
		docker rm "$name"
	fi
}

docker_prep(){
xhost +
del_stopped $1
case $1 in
(ammonite|sublime-text-3|browser|build|clang|cppcheck|doxygen|gcov|gdb|valgrind|mpv|ubuntu_pga|ubuntu_pga_dev|alpine_pga|alpine_pga_testing|etherpad|chrome_no_sandbox|wps|clion|gnumeric|plantuml|gthumb|aa2u|openldapi|re_lab|pwnbox|sonar_server|sonar_scanner|sonar_scanner_go|openshot|neural-style|cloud9|complearn|kaldi|kaldi-gstreamer-server|gmic|centos-i3-vnc|centos7_gobuild|centos7_ccache|pg_dump|pg_dump_10|pg_restore|openpose-cpu|ffmpeg_concat)
    [ "$docker_export_proxy" = "true" ] || cd ~/.dotfiles/pkg/Docker/$1
    [ "$docker_export_proxy" = "true" ] && rm -fr /tmp/docker
	[ "$docker_export_proxy" = "true" ] && cp -r ~/.dotfiles/pkg/Docker/$1 /tmp/docker
    [ "$docker_export_proxy" = "true" ] && cat ~/.dotfiles/pkg/Docker/$1/Dockerfile | head -n1    >  /tmp/docker/Dockerfile
    [ "$docker_export_proxy" = "true" ] && cat ~/.paths | grep http_proxy  | sed 's/export/env/g' >> /tmp/docker/Dockerfile
    [ "$docker_export_proxy" = "true" ] && cat ~/.paths | grep https_proxy | sed 's/export/env/g' >> /tmp/docker/Dockerfile
    [ "$docker_export_proxy" = "true" ] && cat ~/.dotfiles/pkg/Docker/$1/Dockerfile | tail -n+2   >> /tmp/docker/Dockerfile
	[ "$docker_export_proxy" = "true" ] && cd /tmp/docker
	docker build -t $1 .
	cd -
	;;
(atom|evince|tetris|cathode)
	rm -rf /tmp/docker_builder
	mkdir /tmp/docker_builder
	cd /tmp/docker_builder
	wget https://raw.githubusercontent.com/jessfraz/dockerfiles/master/$1/Dockerfile
	docker build -t $1 .
	cd -
	;;
(android_studio)
    mkd ~/android_studio/
    cp ~/.dotfiles/pkg/Docker/android_studio/run.sh .
    chmod +x ./run.sh
    sudo chmod 666 /var/run/docker.sock
    HOST_DISPLAY=1 ./run.sh
    cp -r studio-data/profile/AndroidStudio2.3 studio-data/profile/AndroidStudio3.5
    mkdir studio-data/profile/AndroidStudio3.5/config
    chmod -R 777 studio-data
    ;;
(simplehttp2server)
	git clone https://github.com/GoogleChromeLabs/simplehttp2server.git /tmp/$1/
	cd /tmp/$1/
	docker build -t $1 .
	cd -
	;;
(face_recognition)
	git clone https://github.com/ageitgey/face_recognition.git /tmp/face_recognition/
	cd /tmp/face_recognition
	docker build -t face_recognition .
	cd -
	;;
(docker-antlr)
    docker create --name antlr petervaczi/antlr
    sudo docker cp antlr:docker-antlr /usr/local/bin/
    docker rm antlr
	;;
(antlr)
    docker create --name antlr leodido/antlr
    sudo docker cp antlr:antlr .
    docker rm antlr
    ;;
(go-tensorflow)
	git clone https://github.com/tinrab/go-tensorflow-image-recognition.git /tmp/go-tensorflow/
	cd /tmp/go-tensorflow
    docker-compose -f docker-compose.yaml up -d --build
    cd -
	;;
(tensorflow-inception)
    mkdir /tmp/model-data
    curl -o '/tmp/model-data/inception-v3-2016-03-01.tar.gz' 'http://download.tensorflow.org/models/image/imagenet/inception-v3-2016-03-01.tar.gz'
    cd /tmp/model-data
    tar xzf inception-v3-2016-03-01.tar.gz
    curl -sSL https://raw.githubusercontent.com/bitnami/bitnami-docker-tensorflow-inception/master/docker-compose.yml > docker-compose.yml
    docker-compose up -d
    cd -
    ;;
(named-entity-tagger)
    git clone https://github.com/IBM/MAX-Named-Entity-Tagger.git
    cd MAX-Named-Entity-Tagger
    docker build -t max-named-entity-tagger .
    ;;
(neuraltalk2-web)
    cd /tmp
    wget --no-check-certificate http://cs.stanford.edu/people/karpathy/neuraltalk2/checkpoint_v1_cpu.zip
    unzip checkpoint_v1_cpu.zip
    ;;
(neko)
    cd /tmp
    git clone https://github.com/m1k1o/neko.git
    cd neko
    docker-compose up
    ;;
(audio2text)
    git clone https://github.com/traceypooh/audio2text.git /tmp/audio2text
    cd /tmp/audio2text
    docker build -t audio2text .
    cd -
    ;;
(avgrep)
    git clone https://github.com/kevinhughes27/audiogrep-docker.git /tmp/avgrep
    cd /tmp/avgrep
    docker build -t psychemedia/avgrep .
    cd -
    ;;
(spidy)
    git clone https://github.com/rivermont/spidy.git /tmp/spidy
    cd /tmp/spidy
    docker build -t spidy .
    cd -
    ;;
(spark)
    cd /tmp
    wget http://ftp.cixug.es/apache/spark/spark-2.4.5/spark-2.4.5-bin-hadoop2.7.tgz
    tar -xvzf spark-2.4.5-bin-hadoop2.7.tgz
    cd /tmp/spark-2.4.5-bin-hadoop2.7/
    cp ~/.dotfiles/pkg/Docker/spark/Dockerfile kubernetes/dockerfiles/spark/
    sudo ./bin/docker-image-tool.sh build
    ;;
(pyspark)
    cd /tmp
    wget https://apache.brunneis.com/spark/spark-3.0.1/spark-3.0.1-bin-hadoop2.7.tgz
    tar -xvzf spark-3.0.1-bin-hadoop2.7.tgz
    cd /tmp/spark-3.0.1-bin-hadoop2.7/
    sudo ./bin/docker-image-tool.sh -p kubernetes/dockerfiles/spark/bindings/python/Dockerfile build
    ;;
(upsource)
    mkdir -p $HOME/upsource/data
    mkdir -p $HOME/upsource/conf
    mkdir -p $HOME/upsource/logs
    mkdir -p $HOME/upsource/backups
    chmod -R 777 $HOME/upsource
    ;;
(aind)
    sudo modprobe ashmem_linux
    sudo modprobe binder_linux
    docker run -td --name aind --privileged -p 5900:5900 -v /lib/modules:/lib/modules:ro aind/aind
    ;;
(docker-android)
    docker run --privileged -d -p 6080:6080 -p 5554:5554 -p 5555:5555 -e DEVICE="Samsung Galaxy S6" --name android-container budtmo/docker-android-x86-8.1
    ;;
(resnet)
	mkdir /tmp/model-data
	cd /tmp/model-data
	wget 'http://download.tensorflow.org/models/official/20181001_resnet/savedmodels/resnet_v2_fp32_savedmodel_NHWC_jpg.tar.gz'
	tar xzf resnet_v2_fp32_savedmodel_NHWC_jpg.tar.gz --strip-components=2
	curl -sSL https://raw.githubusercontent.com/bitnami/bitnami-docker-tensorflow-resnet/master/docker-compose.yml > docker-compose.yml
	docker-compose up -d
	;;
(hound)
    wget https://raw.githubusercontent.com/hound-search/hound/master/default-config.json -O config.json
    ;;
(flowise)
    git clone https://github.com/FlowiseAI/Flowise.git /tmp/flowise
    cd /tmp/flowise/docker
    docker build -t flowise .
    cd -
    ;;
(daedalos)
    source ~/.dotfiles/pkg/Docker/daedalos/install.sh
    ;;
esac
}

docker_run(){

case $1 in
(aa2u)                   shift; docker run -it --rm -v $PWD:/workdir -w /workdir aa2u $* ;;
(ab)                     shift; docker run --rm -it ${DOCKER_REPO_PREFIX}/ab $* ;;
(afterthedeadline)       shift; docker run --rm -it afterthedeadline $* ;;
(ammonite)               docker run --rm -it -v $PWD:/workdir -w /workdir ammonite ;;
(android_studio)         cd ~/android_studio/
                         HOST_DISPLAY=1 ./run.sh
                         ;;
(ansible)                docker run --rm -it -v ${PWD}/hosts:/etc/ansible/hosts -v ${PWD}/ansible.cfg:/etc/ansible/ansible.cfg -v ${HOME}/.ssh:/root/.ssh:ro ansible all -m ping ;;
(angr)                   sudo docker run -v $PWD:/workdir -w /workdir -it angr/angr ;;
(aquiladb)               docker run -d -i -p 50051:50051 -v $PWD/aquiladb:/data -v $HOME/.dotfiles/pkg/Docker/aquiladb/DB_config.yml:/AquilaDB/src/DB_config.yml -t ammaorg/aquiladb ;;
(atom)                   docker run -v /tmp/.X11-unix:/tmp/.X11-unix -e DISPLAY=unix$DISPLAY atom ;;
(audacity)               docker run -d -v /etc/localtime:/etc/localtime:ro -v /tmp/.X11-unix:/tmp/.X11-unix -e "DISPLAY=unix${DISPLAY}" -e QT_DEVICE_PIXEL_RATIO --device /dev/snd --group-add audio --name audacity ${DOCKER_REPO_PREFIX}/audacity ;;
(audio2text)             shift; ( docker run --rm -i audio2text | tar xf - ) < $1 ;;
(gentle)                 docker run -P -p 8765:8765 lowerquality/gentle ;;
(avgrep)                 shift; docker run --volume "${PWD}/files":/avgrepfiles --tty --interactive --rm psychemedia/avgrep  audiogrep --input avgrepfiles/$1 --transcribe ;;
(supercut)               shift;
                         docker run --volume "${PWD}/files":/avgrepfiles --tty --interactive --rm psychemedia/avgrep  audiogrep --input avgrepfiles/$1 --transcribe 
                         docker run --volume "${PWD}/files":/avgrepfiles --tty --interactive --rm psychemedia/avgrep  audiogrep --input /avgrepfiles/$1 --search 'transparency | honest | health' --output /avgrepfiles/$1 --regex --output-mode word
                         ;;
(aws)                    shift; docker run -it --rm -v "${HOME}/.aws:/root/.aws" --log-driver none --name aws ${DOCKER_REPO_PREFIX}/awscli "$@" ;;
(az)                     shift; docker run -it --rm -v "${HOME}/.azure:/root/.azure" --log-driver none --name azure ${DOCKER_REPO_PREFIX}/azure-cli "$@" ;;
(bees)                   shift; docker run -it --rm -e NOTARY_TOKEN -v "${HOME}/.bees:/root/.bees" -v "${HOME}/.boto:/root/.boto" -v "${HOME}/.dev:/root/.ssh:ro" --log-driver none --name bees ${DOCKER_REPO_PREFIX}/beeswithmachineguns "$@" ;;
(browser)                shift; docker run -ti --rm -e DISPLAY=$DISPLAY -v /tmp/.X11-unix:/tmp/.X11-unix browser firefox $* ;;
(browsh)                 shift; docker run -ti --rm browsh/browsh $* ;;
(build)                  shift; docker run -v $PWD:/workdir -w /workdir -v $HOME:$HOME -it -v /tmp/.X11-unix:/tmp/.X11-unix -e DISPLAY=unix$DISPLAY build $* ;;
(centos7_gobuild)        shift; docker run -v $PWD:/root/go -w /root/go -it -v /tmp/.X11-unix:/tmp/.X11-unix -e DISPLAY=unix$DISPLAY centos7_gobuild $* ;;
(build_uid)              shift; docker run -v $PWD:/workdir -w /workdir -v $HOME:$HOME -it -v /tmp/.X11-unix:/tmp/.X11-unix -e DISPLAY=unix$DISPLAY -u $(id -u) build $* ;;
(burp)                   docker run -v /tmp/.X11-unix/:/tmp/.X11-unix -e DISPLAY=$DISPLAY -p 8080:8080 -it raesene/burp-free ;;
(cadvisor)               docker run -d --restart always -v /:/rootfs:ro -v /var/run:/var/run:rw -v /sys:/sys:ro -v /var/lib/docker/:/var/lib/docker:ro -p 1234:8080 --name cadvisor google/cadvisor
                         echo $(docker inspect --format '{{.NetworkSettings.Networks.bridge.IPAddress}}' cadvisor) cadvisor | sudo tee -a /etc/hosts
                         google-chrome "http://cadvisor:8080" ;;
(casalioy)               docker run -it -p 8501:8501 --shm-size=16gb su77ungr/casalioy:stable /bin/bash ;;
(cathode)                docker run -it -v /tmp/.X11-unix:/tmp/.X11-unix -e DISPLAY=unix$DISPLAY --name cathode cathode ;;
(centos7)                docker run --privileged -it -v /tmp/.X11-unix:/tmp/.X11-unix -e DISPLAY=unix$DISPLAY centos:7 ;;
(cheese)                 docker run -d -v /etc/localtime:/etc/localtime:ro -v /tmp/.X11-unix:/tmp/.X11-unix -e "DISPLAY=unix${DISPLAY}" -v "${HOME}/Pictures:/root/Pictures" --device /dev/video0 --device /dev/snd --device /dev/dri --name cheese ${DOCKER_REPO_PREFIX}/cheese ;;
(bcc_tools)              docker run --rm -it --privileged -v /lib/modules:/lib/modules:ro -v /usr/src:/usr/src:ro -v /etc/localtime:/etc/localtime:ro r.j3ss.co/bcc-tools ;;
(chrome)
                         shift
                         local proxy=
                         local map
                         local args=$*
                         if [[ "$1" == "tor" ]]; then
                             relies_on torproxy
                             map="MAP * ~NOTFOUND , EXCLUDE torproxy"
                             proxy="socks5://torproxy:9050"
                             args="https://check.torproject.org/api/ip ${*:2}"
                         fi
                         docker run -d --memory 3gb -v /etc/localtime:/etc/localtime:ro -v /tmp/.X11-unix:/tmp/.X11-unix -e "DISPLAY=unix${DISPLAY}" -v "${HOME}/Downloads:/root/Downloads" -v "${HOME}/Pictures:/root/Pictures" -v "${HOME}/Torrents:/root/Torrents" -v "${HOME}/.chrome:/data" -v /dev/shm:/dev/shm -v /etc/hosts:/etc/hosts --security-opt seccomp:/etc/docker/seccomp/chrome.json --device /dev/snd --device /dev/dri --device /dev/video0 --device /dev/usb --device /dev/bus/usb --group-add audio --group-add video --name chrome ${DOCKER_REPO_PREFIX}/chrome --user-data-dir=/data --proxy-server="$proxy" --host-resolver-rules="$map" "$args" ;;
(clang)                  shift; docker run -v $PWD:/workdir -w /workdir -it -u $(id -u) clang $* ;;
(cloud9)                 docker run -d -p 8080:80 -v $PWD:/workspace cloud9;;
(c9)                     docker run -it -d -p 8080:8080 -v $PWD:/cloud9/workspace/ eeacms/cloud9;;
(coder)                  export CODER_DATA=$HOME/.config/coderv2-docker
                         export DOCKER_GROUP=$(getent group docker | cut -d: -f3)
                         mkdir -p $CODER_DATA
                         docker run --rm -it \
                             -v $CODER_DATA:/home/coder/.config \
                             -v /var/run/docker.sock:/var/run/docker.sock \
                             --group-add $DOCKER_GROUP \
                             ghcr.io/coder/coder:latest
                         # curl -L https://coder.com/install.sh | sh
                         # coder templates init
                         # cd docker
                         # coder templates create
                         ;;
(complearn)              docker run -it -v $PWD:/workspace/ -w /workspace complearn bash;;
(complearn_ncd)          docker run -it -v $PWD:/workspace/ -w /workspace complearn ncd file1 file2 ;;
(complearn_binarytree)   docker run -it -v $PWD:/workspace/ -w /workspace complearn ncd -b -d directory directory
                         docker run -it -v $PWD:/workspace/ -w /workspace complearn maketree distmatrix.clb
                         neato -Tpng treefile.dot > treefile.png ;;
(complearn_google)       ncd -b -g -t examples/colors-nums.txt examples/colors-nums.txt
                         docker run -it -v $PWD:/workspace/ -w /workspace complearn maketree distmatrix.clb
                         neato -Tpng treefile.dot > treefile.png ;;
(consul)
                         shift
                         state=$(docker inspect --format "{{.State.Running}}" consul 2>/dev/null)
                         if [[ "$state" == "true" ]] && [[ "$*" != "" ]]; then
                             docker exec -it consul consul "$@"
                             return 0
                         fi
                         docker run -d --restart always -v "${HOME}/.consul:/etc/consul.d" -v /var/run/docker.sock:/var/run/docker.sock --net host -e GOMAXPROCS=2 --name consul ${DOCKER_REPO_PREFIX}/consul agent -bootstrap-expect 1 -config-dir /etc/consul.d -data-dir /data -encrypt "$(docker run --rm ${DOCKER_REPO_PREFIX}/consul keygen)" -ui-dir /usr/src/consul -server -dc neverland -bind 0.0.0.0
                         echo $(docker inspect --format '{{.NetworkSettings.Networks.bridge.IPAddress}}' consul) consul | sudo tee -a /etc/hosts
                         google-chrome "http://consul:8500" ;;
(coursera-aml-nlp)       docker run -it -p 8080:8080 --name coursera-aml-nlp -v $PWD:/root/coursera akashin/coursera-aml-nlp ;;
(corenlp)                docker run -it -p 9000:9000 motiz88/corenlp ;;
(spacyapi)               docker run -p "127.0.0.1:8080:80" jgontrum/spacyapi:en_v2 ;;
(dcos)                   shift; docker run -it --rm -v "${HOME}/.dcos:/root/.dcos" -v "$(pwd):/root/apps" -w /root/apps ${DOCKER_REPO_PREFIX}/dcos-cli "$@" ;;
(docker-antlr)           shift; docker-antlr $* ;;
(antlr)                  shift; docker run --rm -v $PWD:/workdir -w /workdir --user $(id -u):$(id -g) leodido/antlr $* ;;
(antlr)                  shift; antlr $* ;;
(dia)                    shift; docker run -d -v $PWD:/workdir -w /workdir -v /etc/localtime:/etc/localtime:ro -v /tmp/.X11-unix:/tmp/.X11-unix -e DISPLAY=unix"${DISPLAY}" --name dia gruen/dia $* ;;
(carbonyl)               docker run --rm -ti fathyb/carbonyl https://youtube.com ;;
(che)                    docker run -ti -v /var/run/docker.sock:/var/run/docker.sock -v /local/path:/data eclipse/che:rc start ;;
(chromium)               docker run -it --net host --cpuset-cpus 0 --memory 512mb -v /tmp/.X11-unix:/tmp/.X11-unix -e DISPLAY=unix$DISPLAY -v $HOME/Downloads:/home/chromium/Downloads -v $HOME/.config/chromium/:/data --security-opt seccomp=$HOME/chrome.json --device /dev/snd -v /dev/shm:/dev/shm --name chromium ${DOCKER_REPO_PREFIX}/chromium ;;
(clion)                  docker run -it -v /tmp/.X11-unix:/tmp/.X11-unix -e DISPLAY=unix$DISPLAY -v $PWD:/workdir -w /workdir --device /dev/snd clion ;;
(codiad)                 docker run --rm -d -p 8080:80 -e CODIAD_UID=$UID -e CODIAD_GID=$GID -v $PWD:/workdir -v /etc/localtime:/etc/localtime:ro -v /var/run/docker.sock:/var/run/docker.sock:ro wernight/codiad ;;
(couchpotato)            docker run -d --restart always -p 5050:5050 -v /etc/localtime:/etc/localtime:ro -v /volumes/couchpotato:/data --link transmission:transmission --name couchpotato ${DOCKER_REPO_PREFIX}/couchpotato ;;
(cppcheck)               shift; docker run -v $PWD:/workdir -w /workdir -it cppcheck $* ;;
(crio)                   docker run --rm -it --privileged --net host -v /var/lib/containers:/var/lib/containers -v /var/run:/var/run -v /dev:/dev -v /etc/cni:/etc/cni:ro -v /opt/cni:/opt/cni:ro r.j3ss.co/crio ;;
(centos7_ccache)         docker run -it -v $HOME/.ccache:/root/.ccache -v $PWD:/root/Proyectos -w /root/Proyectos centos7_ccache /bin/bash ;;
(gcloud)                 shift; docker run --rm -it -v "${HOME}/.gcloud:/root/.config/gcloud" -v "${HOME}/.ssh:/root/.ssh:ro" -v "$(which docker):/usr/bin/docker" -v /var/run/docker.sock:/var/run/docker.sock --name gcloud ${DOCKER_REPO_PREFIX}/gcloud "$@" ;;
(gnumeric)               shift; docker run -it --rm -v $PWD:/workdir -w /workdir -v /tmp/.X11-unix:/tmp/.X11-unix -e DISPLAY=unix$DISPLAY gnumeric $* ;;
(gthumb)                 shift; docker run -it --rm -v $PWD:/workdir -w /workdir -v /tmp/.X11-unix:/tmp/.X11-unix -e DISPLAY=unix$DISPLAY gthumb $* ;;
(chrome_no_sandbox)      shift; docker run -it --rm -v $PWD:/workdir -w /workdir -v /tmp/.X11-unix:/tmp/.X11-unix -e DISPLAY=unix$DISPLAY -v /home/pablo_aledo/.config/google-chrome/:/root/.config/google-chrome chrome_no_sandbox google-chrome --no-sandbox $* ;;
(daedalos)               docker run -dp 3000:3000 --rm --name daedalos daedalos ;;
(dask_scheduler)         docker run -it --network host daskdev/dask dask-scheduler ;;
(dask_worker)            docker run -it --network host daskdev/dask dask-worker localhost:8786 ;;
(dask_worker_pkg)        docker run -it -e EXTRA_APT_PACKAGES="" -e EXTRA_CONDA_PACKAGES="" -e EXTRA_PIP_PACKAGES="" daskdev/dask dask-worker localhost:8786 ;;
(dask_notebook)          docker run -it --network host daskdev/dask-notebook ;;
(dl-docker)              docker run -it -p 8888:8888 -p 6006:6006 -v $PWD:/workdir -w /workdir -v /tmp/.X11-unix:/tmp/.X11-unix -e DISPLAY=unix$DISPLAY floydhub/dl-docker:cpu bash ;;
(deepo)                  docker run --ipc=host --rm -it -v $PWD:/root -w /root -p 8888:8888 ufoym/deepo:all-py36-jupyter jupyter notebook --no-browser --ip=0.0.0.0 --allow-root --NotebookApp.token= --notebook-dir='/root' ;;
(dejavu)                 docker run -p 1358:1358 -d appbaseio/dejavu ;;
(dex)                    docker run --rm --name dex -p 5556:5556 -v /var/lib/dex:/var/lib/dex -v ~/.dex/dex.yaml:/etc/dex/dex.yaml quay.io/coreos/dex:v2.10.0 serve /etc/dex/dex.yaml ;;
(doctor)                 docker run -it ${DOCKER_REPO_PREFIX}/doctor ;;
(dockly)                 docker run -it -v /var/run/docker.sock:/var/run/docker.sock lirantal/dockly ;;
(docker)                 docker run -v /var/run/docker.sock:/var/run/docker.sock -ti docker ;;
(dolphin)                docker run -it --net host --memory 2gb -e DISPLAY=unix$DISPLAY -v /media/storage0/ROM/dolphinconfigs:/root/.config/dolphin-emu -v /media/storage0/ROM/:/roms -v /dev/shm:/dev/shm -v /etc/machine-id:/etc/machine-id -v /run/user/$(id -u)/pulse:/run/user/$(id -u)/pulse -v /var/lib/dbus:/var/lib/dbus -v ~/.pulse:/root/.pulse --device /dev/input/event22 --device /dev/dri:/dev/dri --name dolphin-run dolphin ;;
(doxygen)                docker run -v $PWD:/workdir -w /workdir -it doxygen ;;
(dunnet)                 docker run -it dunnet ;;
(elasticsearch)          docker run --net host -p 9200:9200 -p 9300:9300 -e "discovery.type=single-node" docker.elastic.co/elasticsearch/elasticsearch:7.0.0 ;;
(emby)                   [ -e ~/Dotfiles/emby ] && cp -r ~/Dotfiles/emby .
                         [ -e ~/emby ] && cp -r ~/emby .
                         docker run -d \
                             --volume $PWD/emby:/config \
                             --volume $PWD:/mnt/share1 \
                             --publish 8096:8096 \
                             --publish 8920:8920 \
                             --env UID=1000 \
                             --env GID=100 \
                             --env GIDLIST=100 \
                             emby/embyserver:latest ;;
(evince)                 docker run -it -v $PWD:/workdir -w /workdir -v /tmp/.X11-unix:/tmp/.X11-unix -v /etc/machine-id:/etc/machine-id -e DISPLAY=$DISPLAY evince $* ;;
(etherpad)               docker run -d -p 9001:9001 etherpad ;;
(euclidesdb)             docker run -p 50000:50000 -v ~/database:/database -it euclidesdb/euclidesdb ;;
(face_recognition)       shift; docker run -it --rm -v $PWD:/workdir -w /workdir -v /tmp/.X11-unix:/tmp/.X11-unix -e DISPLAY=unix$DISPLAY --entrypoint bash face_recognition $* ;;
(facedetect)             shift; docker run --rm -v `pwd`:/work -w /work vimagick/facedetect $* ;;
(flowise)                shift; docker run -d --name flowise -p 3000:3000 flowise ;;
(fontforge)              docker run --rm -v /tmp/.X11-unix:/tmp/.X11-unix -e DISPLAY=unix$DISPLAY -v $state/fontforge:/home/fontforge --name fontforge fghj/fontforge ;;
(ffmpeg)                 shift; docker run --rm -u $(id -u):$(id -g) -v $PWD:/data vimagick/ffmpeg $* ;;
(ffmpeg_concat)          shift; docker run -it -v $PWD:/workdir ffmpeg_concat $* ;;
(firefox)                shift; docker run -d --memory 2gb --net host --cpuset-cpus 0 -v /etc/localtime:/etc/localtime:ro -v /tmp/.X11-unix:/tmp/.X11-unix -v "${HOME}/.firefox/cache:/root/.cache/mozilla" -v "${HOME}/.firefox/mozilla:/root/.mozilla" -v "${HOME}/Downloads:/root/Downloads" -v "${HOME}/Pictures:/root/Pictures" -v "${HOME}/Torrents:/root/Torrents" -e "DISPLAY=unix${DISPLAY}" -e GDK_SCALE -e GDK_DPI_SCALE --device /dev/snd --device /dev/dri --name firefox ${DOCKER_REPO_PREFIX}/firefox "$@" ;;
(funbox)                 shift; docker run --rm -it wernight/funbox $* ;;
(gimp)                   shift; docker run -d -v /etc/localtime:/etc/localtime:ro -v /tmp/.X11-unix:/tmp/.X11-unix -e DISPLAY=unix$DISPLAY -v $PWD:/workdir -w /workdir--name gimp ${DOCKER_REPO_PREFIX}/gimp $* ;;
(gmic)                   docker run -it -v /etc/localtime:/etc/localtime:ro -v /tmp/.X11-unix:/tmp/.X11-unix -e DISPLAY=unix$DISPLAY -v $PWD:/workdir -w /workdir gmic ;;
(gitlab)                 docker run -it -v $PWD/gitlab/config:/etc/gitlab -v $PWD/gitlab/logs:/var/log/gitlab -v $PWD/gitlab/data:/var/opt/gitlab -p 443:443 -p 2222:22 gitlab/gitlab-ce ;;
(gitserver)              docker run --rm -it -p 1234:22 -e DEBUG=true -e "PUBKEY=$(cat ~/.ssh/id_ed25519.pub)" --name gitserver ${DOCKER_REPO_PREFIX}/gitserver ;;
(gitsome)                docker run --rm -it -v ${HOME}/.gitsomeconfig:/home/anon/.gitsomeconfig -v ${HOME}/.gitsomeconfigurl:/home/anon/.gitsomeconfigurl r.j3ss.co/gitsome ;;
(go-tensorflow)          shift; curl localhost:8080/recognize -F "image=@./$1" ;;
(image-caption)          docker run -it -p 5000:5000 codait/max-image-caption-generator; google-chrome localhost:5000 ;;
(inception-test-tika)    docker run -it -p 8764:8764 uscdatascience/inception-rest-tika ;;
(im2txt-rest-tika)       docker run -it -p 8764:8764 uscdatascience/im2txt-rest-tika ;;
(inception-video-rest)   docker run -it -p 8764:8764 uscdatascience/inception-video-rest-tika ;;
(neuraltalk2-web)        docker run -e "modelPath=/mounted/model/model_id1-501-1448236541.t7_cpu.t7" -p 5000:5000 -v /tmp/model_id1-501-1448236541.t7_cpu.t7:/mounted/model/model_id1-501-1448236541.t7_cpu.t7 jacopofar/neuraltalk2-web:latest ;;
(gvim)                   docker run -ti --rm -e DISPLAY=$DISPLAY -v /tmp/.X11-unix:/tmp/.X11-unix verybada/gvim ;;
(gnuplot)                docker run --rm -it r.j3ss.co/gnuplot ;;
(haystack)               cd
                         git clone https://github.com/deepset-ai/haystack.git
                         cd haystack
                         docker-compose pull
                         docker-compose up
                         google-chrome http://localhost:8501
                         ;;
(hacker-tools)           docker run -it -d --net=host --privileged --name little-boy veerendrav2/hacker-tools ;;
(hollywood)              docker run --rm -it --name hollywood ${DOCKER_REPO_PREFIX}/hollywood ;;
(htop)                   docker run --rm -it --pid host --net none --name htop ${DOCKER_REPO_PREFIX}/htop ;;
(http)                   shift; docker run -t --rm -v /var/run/docker.sock:/var/run/docker.sock --log-driver none ${DOCKER_REPO_PREFIX}/httpie "$@" ;;
(gixy)                   docker run --rm -it -v /etc/nginx:/etc/nginx r.j3ss.co/gixy /etc/nginx/nginx.conf ;;
(gdb)                    docker run -v $PWD:/workdir -w /workdir -it gdb ;;
(glxgears)               docker run -v /tmp/.X11-unix:/tmp/.X11-unix -e DISPLAY=unix$DISPLAY --device /dev/dri ${DOCKER_REPO_PREFIX}/glxgears ;;
(gparted)                docker run -v /tmp/.X11-unix:/tmp/.X11-unix --device=/dev/sda:/dev/sda -e DISPLAY=unix$DISPLAY jess/gparted ;;
(guetzli)                docker run --rm -it -v ${PWD}:/tmp r.j3ss.co/guetzli:latest --verbose /tmp/example.jpg /tmp/example.compressed.jpg ;;
(gcalcli)                shift; docker run --rm -it -v /etc/localtime:/etc/localtime:ro -v "${HOME}/.gcalcli/home:/home/gcalcli/home" -v "${HOME}/.gcalcli/work/oauth:/home/gcalcli/.gcalcli_oauth" -v "${HOME}/.gcalcli/work/gcalclirc:/home/gcalcli/.gcalclirc" --name gcalcli ${DOCKER_REPO_PREFIX}/gcalcli "$@" ;;
(gcov)                   docker run -v $PWD:/workdir -w /workdir -it gcov ;;
(htop)                   docker run --rm -it --pid host ${DOCKER_REPO_PREFIX}/htop ;;
(igel)                   mkd ~/tmp/igel
                         cp ~/.dotfiles/pkg/Docker/igel/examples/indian-diabetes-example/* ~/.dotfiles/pkg/Docker/igel/examples/data/indian-diabetes/* .
                         docker run -it --rm -v $(pwd):/data nidhaloff/igel fit -yml neural-network.yaml -dp train-indians-diabetes.csv
                         docker run -it --rm -v $(pwd):/data nidhaloff/igel evaluate -dp eval-indians-diabetes.csv
                         docker run -it --rm -v $(pwd):/data nidhaloff/igel predict -dp test-indians-diabetes.csv ;;
(imagemin)               docker run --rm -it -v /etc/localtime:/etc/localtime:ro -v $HOME/Pictures:/root/Pictures --entrypoint bash ${DOCKER_REPO_PREFIX}/imagemin ;;
(inkscape)               shift; docker run -v /tmp/.X11-unix:/tmp/.X11-unix -v $PWD:/workdir -w /workdir -e DISPLAY=unix$DISPLAY ${DOCKER_REPO_PREFIX}/inkscape $* ;;
(jaeger)                 docker run --rm --name jaeger \
                           -e COLLECTOR_ZIPKIN_HOST_PORT=:9411 \
                           -p 6831:6831/udp \
                           -p 6832:6832/udp \
                           -p 5778:5778 \
                           -p 16686:16686 \
                           -p 4317:4317 \
                           -p 4318:4318 \
                           -p 14250:14250 \
                           -p 14268:14268 \
                           -p 14269:14269 \
                           -p 9411:9411 \
                           jaegertracing/all-in-one:1.59 ;;
(jenkins)                docker run -p 8080:8080 -p 50000:50000 -v $PWD:/var/jenkins_home jenkins/jenkins:lts ;;
(jenkins-with-docker)    docker run -p 8080:8080 -p 50000:50000 \
                            -v $PWD:/var/jenkins_home \
                            -v /var/run/docker.sock:/var/run/docker.sock \
                            -v /usr/bin/docker:/usr/bin/docker shehab/jenkins-with-docker ;;
(john)                   shift
                         file=$(realpath "$1")
                         docker run --rm -it -v "${file}:/root/$(basename "${file}")" ${DOCKER_REPO_PREFIX}/john "$@" ;;
(kafka_server)           internal_eth0=$(myip | grep internal_eth | cut -d':' -f2)
                         topic=ktopic
                         docker run -d --name zookeeper -p 2181:2181 jplock/zookeeper
                         docker run -d --name kafka -p 7203:7203 -p 9092:9092 -e KAFKA_ADVERTISED_HOST_NAME=$internal_eth0 -e ZOOKEEPER_IP=$internal_eth0 ches/kafka
                         docker run --rm ches/kafka kafka-topics.sh --create --topic $topic --replication-factor 1 --partitions 1 --zookeeper $internal_etho0:2181
                         docker run --rm ches/kafka kafka-topics.sh --list --zookeeper $internal_eth0:2181 ;;
(kafka_producer)         internal_eth0=$(myip | grep internal_eth | cut -d':' -f2)
                         topic=ktopic
                         docker run --rm --interactive ches/kafka kafka-console-producer.sh --topic $topic --broker-list $internal_eth0:9092 ;;
(kafka_consumer)         internal_eth0=$(myip | grep internal_eth | cut -d':' -f2)
                         topic=ktopic
                         docker run --rm ches/kafka kafka-console-consumer.sh --topic $topic --from-beginning --zookeeper $internal_eth0:2181 ;;
(klee)                   docker run -v $PWD:/workdir -w /workdir -ti --name=my_first_klee_container --ulimit='stack=-1:-1' klee/klee ;;
(keepass2)               shift; docker run -it -v /home/$USER/DB.kdbx:/root/DB.kdbx -v /tmp/.X11-unix:/tmp/.X11-unix -v /home/$USER/keepass2-plugins:/usr/lib/keepass2/Plugins -e DISPLAY=$DISPLAY keepass2 "$@" ;;
(keepassxc)              docker run -d -v /tmp/.X11-unix:/tmp/.X11-unix -v /etc/machine-id:/etc/machine-id:ro -v /usr/share/X11/xkb:/usr/share/X11/xkb/:ro -v $HOME/.config/keepassxc:/root/.config/keepassxc -e DISPLAY=unix$DISPLAY keepassxc ;;
(kernel_builder)         docker run --rm -it -v /usr/src:/usr/src --cpu-shares=512 --name kernel-builder ${DOCKER_REPO_PREFIX}/kernel-builder ;;
(kodexplorer)            docker run -p 8000:80 -v $PWD/kodexplorer:/var/www/html xaljer/kodexplorer ;;
(koding)                 git clone https://github.com/koding/docker-compose.git koding-docker-compose
                         cd koding-docker-compose
                         # Requires docker-compose version >= 1.6
                         docker-compose up -d
                         google-chrome localhost:7700
                         ;;
(kubebox)                docker run -it --rm -v ~/.kube/:/home/node/.kube/:ro astefanutti/kubebox ;;
                         # kubectl create -f https://raw.github.com/astefanutti/kubebox/master/kubernetes.yaml
                         # oc new-app -f https://raw.github.com/astefanutti/kubebox/master/openshift.yaml
                         # kubectl run kubebox -it --rm --env="TERM=xterm" --image=astefanutti/kubebox --restart=Never
(kvm)                    docker run -d --privileged -v /var/run/libvirt:/var/run/libvirt --name kvm ${DOCKER_REPO_PREFIX}/kvm ;;
(label_studio)           docker run -it -p 8080:8080 -v $(pwd)/mydata:/label-studio/data heartexlabs/label-studio:latest ;;
(lam)                    docker run -p 8080:80 -it -d ldapaccountmanager/lam:stable ;;
(lamp)                   docker run --rm -p 8000:80 -e LOG_STDOUT=true -e LOG_STDERR=true -e LOG_LEVEL=debug -v $PWD:/var/www/html fauria/lamp ;;
(lamp_mysql)             docker run -d --link my-mysql-container:mysql -p 8080:80 -v $PWD/html:/var/www/html -v $PWD/logs:/var/log/httpd --name my-lamp-container fauria/lamp
                         docker run -it mysql ;;
(languagecrunch)         docker run -it -p 8080:8080 artpar/languagecrunch ;;
(libreoffice)            docker run -d -v /etc/localtime:/etc/localtime:ro -v /tmp/.X11-unix:/tmp/.X11-unix -e DISPLAY=unix$DISPLAY -v $HOME/slides:/root/slides -e GDK_SCALE -e GDK_DPI_SCALE --name libreoffice ${DOCKER_REPO_PREFIX}/libreoffice ;;
(llama-gpt)              cd
                         git clone https://github.com/getumbrel/llama-gpt.git
                         cd llama-gpt
                         ./run.sh --model 7b
                         ;;
(lpass)                  shift; docker run --rm -it -v "${HOME}/.lpass:/root/.lpass" --name lpass ${DOCKER_REPO_PREFIX}/lpass "$@" ;;
(lynx)                   shift; docker run --rm -it --name lynx ${DOCKER_REPO_PREFIX}/lynx "$@" ;;
(lilyterm)               docker run -v /tmp/.X11-unix:/tmp/.X11-unix -e DISPLAY=unix$DISPLAY ${DOCKER_REPO_PREFIX}/lilyterm ;;
(lynx)                   docker run --rm -it --name lynx ${DOCKER_REPO_PREFIX}/lynx github.com/jessfraz ;;
(mailman)                docker run -d -p 1234:80 -p 25:25 ${DOCKER_REPO_PREFIX}/mailman ;;
(masscan)                shift; docker run -it --rm --log-driver none --net host --cap-add NET_ADMIN --name masscan ${DOCKER_REPO_PREFIX}/masscan "$@" ;;
(meili)                  mkd meilisearch
                         docker run -d -p 7700:7700 -v "$(pwd)/data.ms:/data.ms" getmeili/meilisearch
                         curl -L 'https://bit.ly/2PAcw9l' -o movies.json
                         curl -i -X POST 'http://127.0.0.1:7700/indexes/movies/documents' \
                            --header 'content-type: application/json' \
                            --data-binary @movies.json
                         google-chrome localhost:7700
                         ;;
(minio)                  docker run -it --rm -p 9000:9000 -p 9001:9001 quay.io/minio/minio server /data --console-address ":9001"
                         docker run --entrypoint=/bin/sh minio/mc -c 'mc config host add minio http://172.17.0.2:9000 minioadmin minioadmin && mc mb minio/bucket'
                         echo "access_key:secret_key" | sudo tee /etc/s3cred
                         sudo chown $(whoami):$(whoami) /etc/s3cred; sudo chmod 600 /etc/s3cred
                         s3fs bucket ~/s3 -o passwd_file=/etc/s3cred,use_path_request_style,url=http://minio-server:9000
                         ;;
(mongodb)                docker run -it -p 27017:27017 bitnami/mongodb:latest ;;
(mongodb_network)        docker network create app-tier --driver bridge ;;
(mongodb_primary)        docker run -d --name mongodb-primary \
                             --hostname mongodb-primary \
                             --network app-tier \
                             -e MONGODB_REPLICA_SET_MODE=primary \
                             -e MONGODB_ADVERTISED_HOSTNAME=mongodb-primary \
                             -e MONGODB_ROOT_PASSWORD=password123 \
                             -e MONGODB_REPLICA_SET_KEY=replicasetkey123 \
                             bitnami/mongodb:latest ;;
(mongodb_secondary)      docker run -d --name mongodb-secondary \
                             --hostname mongodb-secondary \
                             --network app-tier \
                             --link mongodb-primary:primary \
                             -e MONGODB_REPLICA_SET_MODE=secondary \
                             -e MONGODB_ADVERTISED_HOSTNAME=mongodb-secondary \
                             -e MONGODB_INITIAL_PRIMARY_HOST=primary \
                             -e MONGODB_INITIAL_PRIMARY_PORT_NUMBER=27017 \
                             -e MONGODB_INITIAL_PRIMARY_ROOT_PASSWORD=password123 \
                             -e MONGODB_REPLICA_SET_KEY=replicasetkey123 \
                             bitnami/mongodb:latest ;;
(mongodb_arbiter)        docker run -d --name mongodb-arbiter \
                             --link mongodb-primary:primary \
                             --network app-tier \
                             -e MONGODB_REPLICA_SET_MODE=arbiter \
                             -e MONGODB_ADVERTISED_HOSTNAME=mongodb-arbiter \
                             -e MONGODB_INITIAL_PRIMARY_HOST=primary \
                             -e MONGODB_INITIAL_PRIMARY_PORT_NUMBER=27017 \
                             -e MONGODB_INITIAL_PRIMARY_ROOT_PASSWORD=password123 \
                             -e MONGODB_REPLICA_SET_KEY=replicasetkey123 \
                             bitnami/mongodb:latest ;;
(mongoclient_replica)    docker run --network app-tier --link mongodb-primary:primary -it --entrypoint mongo bitnami/mongodb:latest -u root -p password123 --host mongodb-primary ;;
                         #rs.initiate()
                         #db.isMaster().ismaster
                         #rs.add("mongodb-secondary")
                         #rs.status().members
(mongoclient)            docker run -it --entrypoint mongo --network host bitnami/mongodb:latest ;;
(mop)                    docker run -it --rm -v ~/.moprc:/root/.moprc --name mop r.j3ss.co/mop ;;
(mpd)                    docker run -d --device /dev/snd -v /etc/localtime:/etc/localtime:ro -v $HOME/.mpd:/var/lib/mpd -p 6600:6600 --name mpd ${DOCKER_REPO_PREFIX}/mpd ;;
(mpv)                    shift; docker run -it --rm -v /dev/dsp:/dev/dsp -v $PWD:/data -w /data -v /tmp/.X11-unix:/tmp/.X11-unix -e DISPLAY=$DISPLAY --privileged mpv $* ;;
(mysql)                  shift
                         export MYSQL_CONTAINER_NAME=${MYSQL_CONTAINER_NAME:-'mysql-groundswell-tower'}
                         export MYSQL_CONTAINER_IMAGE=${MYSQL_CONTAINER_IMAGE:-'mysql/mysql-server:5.6'}
                         export MYSQL_CONTAINER_PLATFORM=${MYSQL_CONTAINER_PLATFORM:-'linux/amd64'}
                         docker run \
                            -d \
                            --rm \
                            --name=$MYSQL_CONTAINER_NAME \
                            --platform $MYSQL_CONTAINER_PLATFORM \
                            -v ./initDB:/docker-entrypoint-initdb.d \
                            -e MYSQL_ROOT_HOST=% \
                            -e MYSQL_ROOT_PASSWORD=password \
                            -p 3306:3306 \
                            $MYSQL_CONTAINER_IMAGE ;;
(meld)                   shift; docker run -d -e DISPLAY=unix$DISPLAY -v /tmp/.X11-unix:/tmp/.X11-unix -v $(pwd):/workdir guywithnose/meld meld $* ;;
(metabase)               docker run -d -p 3000:3000 --name metabase metabase/metabase ;;
(mutt)                   docker run -it -v /etc/localtime:/etc/localtime:ro -e GMAIL -e GMAIL_NAME -e GMAIL_PASS -e GMAIL_FROM -v $HOME/.gnupg:/home/user/.gnupg --name mutt ${DOCKER_REPO_PREFIX}/mutt ;;
(n8n)                    docker volume create n8n_data
                         docker run -it --rm --name n8n -p 5678:5678 -v n8n_data:/home/node/.n8n docker.n8n.io/n8nio/n8n
                         ;;
(named-entity-tagger)    
                         docker run -it -p 5000:5000 max-named-entity-tagger
                         curl -X POST -H 'Content-Type: application/json' -d '{"text":"John lives in Brussels and works for the EU"}' 'http://localhost:5000/model/predict'
                         firefox localhost:5000
                         ;;
(ncmpc)                  docker run --rm -it -v /etc/localtime:/etc/localtime:ro --link mpd:mpd ${DOCKER_REPO_PREFIX}/ncmpc ;;
(neoman)                 docker run -d -v /etc/localtime:/etc/localtime:ro -v /tmp/.X11-unix:/tmp/.X11-unix -e DISPLAY=unix$DISPLAY --device /dev/bus/usb --device /dev/usb --name neoman ${DOCKER_REPO_PREFIX}/neoman ;;
(nes)                    docker run --rm -d --device /dev/snd -v /tmp/.X11-unix:/tmp/.X11-unix -e DISPLAY=unix$DISPLAY --device /dev/dri ${DOCKER_REPO_PREFIX}/nes /games/zelda.rom ;;
(netcat)                 shift; docker run --rm -it --net host ${DOCKER_REPO_PREFIX}/netcat "$@" ;;
(nginx_jess)             docker run -d --restart always -v "${HOME}/.nginx:/etc/nginx" --net host --name nginx nginx
                         sudo hostess add jess 127.0.0.1 ;;
(nginx)                  docker run -v $PWD:/usr/share/nginx/html:ro -v "${HOME}/.nginx:/etc/nginx" --net host nginx ;;
(nginx-echo-headers)     docker run -it --rm --name backend brndnmtthws/nginx-echo-headers ;;
(nginx-oauth2)           docker run -it --rm -p 8080:80 -v $(pwd)/default.conf:/etc/nginx/conf.d/default.conf --link oauth-proxy --link backend nginx ;;
(notify-osd)             docker run -d -v /etc/machine-id:/etc/machine-id:ro -v /etc/localtime:/etc/localtime:ro -v /tmp/.X11-unix:/tmp/.X11-unix -v /var/run/dbus:/var/run/dbus -v /var/run/user/$(id -u):/var/run/user/$(id -u) $(env | cut -d= -f1 | awk '{print "-e", $1}') -e DISPLAY=unix$DISPLAY -e DBUS_SESSION_BUS_ADDRESS="unix:path=/var/run/user/1000/bus" -v /etc/passwd:/etc/passwd:ro -v /etc/group:/etc/group:ro -u $(whoami) -w "$HOME" -v $HOME/.Xauthority:$HOME/.Xauthority --name notify-osd ${DOCKER_REPO_PREFIX}/notify-osd ;;
(notify_send)            local args=${*:2}
                         docker exec -i notify_osd notify-send "$1" "${args}" ;;
(ollama)                 docker run -d -v ollama:/root/.ollama -p 11434:11434 --name ollama ollama/ollama
                         docker exec -it ollama ollama run llama2
                         ;;
(ollama-gpu)             docker run -d --gpus=all -v ollama:/root/.ollama -p 11434:11434 --name ollama ollama/ollama
                         docker exec -it ollama ollama run llama2
                         ;;
(openllm)                docker run --rm -it -p 3000:3000 ghcr.io/bentoml/openllm start facebook/opt-1.3b --backend pt ;;
(openshot)               docker run -it --rm -v $PWD:/workdir -w /workdir -v /tmp/.X11-unix:/tmp/.X11-unix -e DISPLAY=unix$DISPLAY openshot ;;
(openpose-cpu)           docker run -v`pwd`:/data -it openpose-cpu -display 0 -video /data/${2} -write_video /data/${2}.openpose.avi ;;
(oauth2_proxy)           docker run -it --rm --name oauth-proxy a5huynh/oauth2_proxy \
                             --cookie-secure=false \
                             --upstream="http://upstream:80" \
                             --http-address="0.0.0.0:4180" \
                             --provider gitlab \
                             --scope read_user \
                             --login-url="https://gitlab.yourcompany.com/oauth/authorize" \
                             --redeem-url="https://gitlab.yourcompany.com/oauth/token" \
                             --validate-url="https://gitlab.yourcompany.com/api/v4/user" \
                             --redirect-url="http://localhost:8080/oauth2/callback" \
                             --email-domain="*" \
                             --cookie-secret=5emaI8pW6kNr4ICj4TmTSg \
                             --client-id=4f40001533f4a1da5361b476bb93cc0f0f5218b0f7e306e5810a16ef4810f713 \
                             --client-secret=0a69708d09b905f19858263c32c3e7eef366c892eb99e5a3c854fb4fa9b4d6f8 \
                             --set-xauthrequest ;;
(opengrok)               docker run -d -v $PWD:/opengrok/src -p 8080:8080 opengrok/docker:latest ;;
(openplayground)         docker run --name openplayground -p 5432:5432 -d --volume openplayground:/web/config natorg/openplayground ;;
(hound)                  docker run -p 6080:6080 --name hound -v $(pwd):/data etsy/hound ;;
(sourcegraph)            docker run --publish 7080:7080 --publish 127.0.0.1:3370:3370 --rm --volume ~/.sourcegraph/config:/etc/sourcegraph --volume ~/.sourcegraph/data:/var/opt/sourcegraph sourcegraph/server:3.22.0 ;;
(livgrep -E)               docker run -v $(pwd):/data livgrep -E/indexer /livgrep -E/bin/livgrep -E-github-reindex -repo livgrep -E/livgrep -E -http -dir /data
                         docker network create livgrep -E
                         docker run -d --rm -v $(pwd):/data --network livgrep -E --name livgrep -E-backend livgrep -E/base /livgrep -E/bin/codesearch -load_index /data/livgrep -E.idx -grpc 0.0.0.0:9999
                         docker run -d --rm --network livgrep -E --publish 8910:8910 livgrep -E/base /livgrep -E/bin/livgrep -E -docroot /livgrep -E/web -listen=0.0.0.0:8910 --connect livgrep -E-backend:9999
                         ;;
(owncloud)               docker run -d -p 8000:80 -v $PWD/owncloud:/var/www/html owncloud:8.1 ;;
                         # --link my-mysql:mysql, and then use mysql as the database host on setup.
                         # docker exec -u www-data some-owncloud php occ status
(nextcloud)              docker run -d -p 8080:80 nextcloud ;;
(pivman)                 docker run -d -v /etc/localtime:/etc/localtime:ro -v /tmp/.X11-unix:/tmp/.X11-unix -e DISPLAY=unix$DISPLAY --device /dev/bus/usb --device /dev/usb --name pivman ${DOCKER_REPO_PREFIX}/pivman ;;
(poli)                   docker run -d -p 6688:6688 --name poli zhonglu/poli:0.10.1 ;;
(povray)                 docker run -i -t --rm -v $PWD:/src --name povray bradleybossard/docker-povray ;;
(plantuml)               shift; docker run -it --rm -v $PWD:/workdir -w /workdir -v /tmp/.X11-unix:/tmp/.X11-unix -e DISPLAY=unix$DISPLAY plantuml $* ;;
(plex-home-theater)      docker run -d -v /tmp/.X11-unix:/tmp/.X11-unix -e DISPLAY=unix$DISPLAY --device /dev/snd:/dev/snd --device /dev/dri:/dev/dri ${DOCKER_REPO_PREFIX}/plex-home-theater ;;
(plexpy)                 docker run -d --name=PlexPy -v <path to local plexpy data>:/data -p 8181:8181 r.j3ss.co/plexpy ;;
(plex)                   cp -r ~/.dotfiles/pkg/Docker/plex .
                         cd plex
                         mkdir -p data/{plex,Movies,Music,Photos}
                         sed -i -e "s/%u%/$(id -u)/g" -e "s/%g%/$(id -g)/g" docker-compose.yml
                         docker-compose up -d
                         google-chrome http://localhost:32400/web ;;
(pandoc)                 shift
                         local file=${*: -1}
                         local lfile
                         lfile=$(readlink -m "$(pwd)/${file}")
                         local rfile
                         rfile=$(readlink -m "/$(basename "$file")")
                         local args=${*:1:${#@}-1}
                         docker run --rm -v "${lfile}:${rfile}" -v /tmp:/tmp --name pandoc ${DOCKER_REPO_PREFIX}/pandoc "${args}" "${rfile}" ;;
(pivman)                 docker run -d -v /etc/localtime:/etc/localtime:ro -v /tmp/.X11-unix:/tmp/.X11-unix -e "DISPLAY=unix${DISPLAY}" --device /dev/bus/usb --device /dev/usb --name pivman ${DOCKER_REPO_PREFIX}/pivman ;;
(pond)                   docker run --rm -it --net container:torproxy --name pond ${DOCKER_REPO_PREFIX}/pond ;;
(registrator)            docker run -d --restart always -v /var/run/docker.sock:/tmp/docker.sock --net host --name registrator gliderlabs/registrator consul: ;;
(pms)                    docker run --rm -it -v /etc/localtime:/etc/localtime:ro --link mpd:mpd ${DOCKER_REPO_PREFIX}/pms ;;
(privoxy)                docker run -d --restart always --link torproxy:torproxy -v /etc/localtime:/etc/localtime:ro -p 8118:8118 --name privoxy ${DOCKER_REPO_PREFIX}/privoxy ;;
(pulseaudio)             docker run -d -v /etc/localtime:/etc/localtime:ro --device /dev/snd --name pulseaudio -p 4713:4713 -v /var/run/dbus:/var/run/dbus -v /etc/machine-id:/etc/machine-id ${DOCKER_REPO_PREFIX}/pulseaudio ;;
(pwnbox)                 docker run -it --rm -v $PWD:/workdir -w /workdir -v /tmp/.X11-unix:/tmp/.X11-unix -e DISPLAY=unix$DISPLAY --security-opt seccomp:unconfined superkojiman/pwnbox ;;
(pycharm)                docker run --rm -e DISPLAY=${DISPLAY} -v /tmp/.X11-unix:/tmp/.X11-unix -v ~/.PyCharm:/home/developer/.PyCharm -v ~/.PyCharm.java:/home/developer/.java -v ~/.PyCharm.py2:/usr/local/lib/python2.7 -v ~/.PyCharm.py3:/usr/local/lib/python3.4 -v ~/Project:/home/developer/Project -v $PWD:/workdir -w /workdir --name pycharm-$(head -c 4 /dev/urandom | xxd -p)-$(date +'%Y%m%d-%H%M%S') rycus86/pycharm:latest ;; 
(pycharm-ce)             docker run -it -v /tmp/.X11-unix/:/tmp/.X11-unix/ -e DISPLAY=$DISPLAY --rm kongkoro/pycharm ;;
(pydio)                  docker run -v /etc/localtime:/etc/localtime:ro -v $PWD/pydio/config:/config -v $PWD/pydio/data:/data -e PGID=$(id -g) -e PUID=$(id -u) -e TZ=$(cat /etc/timezone) -p 443:443 linuxserver/pydio ;;
(python-workspace)       docker run --name space-1 -d -p 8020-8035:8020-8035 alnoda/python-workspace ;;
(eg_postgresql)          docker run --rm -P --name pg_test eg_postgresql ;;
(pg_dump)                shift; docker run -it pg_dump pg_dump $* ;;
(pg_dump_10)             shift; docker run -v $PWD:/workdir -w /workdir pg_dump_10 pg_dump $* ;;
(pg_restore_10)          shift; docker run -v $PWD:/workdir -w /workdir pg_dump_10 pg_restore $* ;;
(pg_restore)             docker run -it pg_restore ;;
(qemu-docker)            docker run -it --rm --name qemu -e "BOOT=https://dl-cdn.alpinelinux.org/alpine/v3.19/releases/x86_64/alpine-virt-3.19.1-x86_64.iso" -p 8006:8006 --device=/dev/kvm --cap-add NET_ADMIN qemux/qemu-docker ;;
(rainbowstream)          docker run -it --rm -v /etc/localtime:/etc/localtime:ro -v $HOME/.rainbow_oauth:/root/.rainbow_oauth -v $HOME/.rainbow_config.json:/root/.rainbow_config.json --name rainbowstream ${DOCKER_REPO_PREFIX}/rainbowstream ;;
(rancher)                docker run --privileged --restart=unless-stopped -p 80:80 -p 443:443 rancher/rancher:latest ;;
(re_lab)                 docker run -it -v $(pwd)/share_ro:/share_ro:ro -v $(pwd)/share_rw:/share_rw re_lab ;;
(redis)                  docker run -e ALLOW_EMPTY_PASSWORD=yes -p 6379:6379 bitnami/redis:latest ;;
(disque)                 docker run -p 7711:7711 efrecon/disque:1.0-rc1 ;;
(recoll)                 docker run -p 8080:8080 -v $HOME:/root ~/.dotfiles/pkg/Docker/recoll/recoll.conf:/root/.recoll/recoll.conf dsheyp/docker-recoll-webui
                         docker exec $(docker ps | grep recoll | awk '{print $1}' ) recollindex ;;
(resnet)                 docker exec -it $(docker ps | grep tensorflow-resnet | awk '{print $1}') bash -c 'curl https://www.tensorflow.org/images/blogs/serving/cat.jpg -o /tmp/cat.jpg; resnet_client_cc --server_port=tensorflow-serving:8500 --image_file=/tmp/cat.jpg' ;;
(registry)               docker run -d -p 5000:5000 --restart=always --name registry -v /opt/docker-registry:/var/lib/registry registry:2
                         echo '{"insecure-registries": ["registry.yourdomain.com:5000"]}' | sudo tee /etc/docker/daemon.json
                         sudo systemctl restart docker || sudo service docker restart ;;
(remmina)                docker run -d -v /etc/localtime:/etc/localtime:ro -v /tmp/.X11-unix:/tmp/.X11-unix -e DISPLAY=unix$DISPLAY -v $HOME/.remmina:/root/.remmina --name remmina ${DOCKER_REPO_PREFIX}/remmina ;;
(ricochet)               docker run -d --restart always -v /etc/localtime:/etc/localtime:ro -v /tmp/.X11-unix:/tmp/.X11-unix -e DISPLAY=unix$DISPLAY --name ricochet ${DOCKER_REPO_PREFIX}/ricochet ;;
(rstudio)                docker run -it -v /tmp/.X11-unix:/tmp/.X11-unix -e DISPLAY=unix$DISPLAY -v $HOME/rscripts:/root/rscripts --device /dev/dri --name rstudio ${DOCKER_REPO_PREFIX}/rsudio ;;
(s3cmd)                  docker run --rm -it -e AWS_ACCESS_KEY -e AWS_SECRET_KEY -v $(pwd):/root/s3cmd-workspac--name s3cmd ${DOCKER_REPO_PREFIX}/s3cmd ;;
(scudcloud)              docker run --rm -it -v /etc/machine-id:/etc/machine-id:ro -v /etc/localtime:/etc/localtime:ro -v /tmp/.X11-unix:/tmp/.X11-unix -e DISPLAY=unix$DISPLAY --device /dev/snd:/dev/snd -v /var/run/dbus:/var/run/dbus -v $HOME/.scudcloud:/home/user/.config/scudcloud --name scudcloud ${DOCKER_REPO_PREFIX}/scudcloud ;;
(serge)                  docker run -d --name serge -v weights:/usr/src/app/weights -v datadb:/data/db/ -p 8008:8008 ghcr.io/serge-chat/serge:latest ;;
(shorewall)              docker run --rm -it --net host --cap-add NET_ADMIN --privileged ${DOCKER_REPO_PREFIX}/shorewall ;;
(sickbeard)              docker run -d --restart always -p 8081:8081 -v /etc/localtime:/etc/localtime:ro -v /volumes/sickbeard:/data --link transmission:transmission --name sickbeard ${DOCKER_REPO_PREFIX}/sickbeard ;;
(skype)                  docker_app pulseaudio 
                         docker run -v /tmp/.X11-unix:/tmp/.X11-unix -v $HOME/.Skype:/home/skype/.Skype -e DISPLAY=unix$DISPLAY --link pulseaudio:pulseaudio -e PULSE_SERVER=pulseaudio --device /dev/video0 --name skype ${DOCKER_REPO_PREFIX}/skype ;;
(simplehttpserver)       docker run -v $PWD:/var/www:ro -p 8080:8080 trinitronx/python-simplehttpserver ;;
(simplehttp2server)      docker run --rm --name simplehttp2server -p 5000:5000 -v $PWD:/workdir -w /workdir simplehttp2server ;;
(slack)                  shift; docker run --rm -it -v /etc/localtime:/etc/localtime:ro -v /tmp/.X11-unix:/tmp/.X11-unix -e DISPLAY=unix$DISPLAY --device /dev/snd --device /dev/dri --device /dev/video0 --group-add audio --group-add video -v "${HOME}/.slack:/root/.config/Slack" --ipc="host" --name slack ${DOCKER_REPO_PREFIX}/slack "$@" ;;
(slapd)                  docker run -v /data/ldap:/var/lib/ldap -e LDAP_DOMAIN=authy.auth.co -e LDAP_ORGANISATION="E Corp" -e LDAP_ROOTPASS=fsociety -d ${DOCKER_REPO_PREFIX}/slapd ;;
(steam)                  docker run -d -v /etc/localtime:/etc/localtime:ro -v /etc/machine-id:/etc/machine-id:ro -v /var/run/dbus:/var/run/dbus -v /tmp/.X11-unix:/tmp/.X11-unix -v "${HOME}/.steam:/home/steam" -e "DISPLAY=unix${DISPLAY}" --link pulseaudio:pulseaudio -e PULSE_SERVER=pulseaudio --device /dev/dri --name steam ${DOCKER_REPO_PREFIX}/steam ;;
(spacevim)               docker run -it --rm spacevim/spacevim nvim;;
(spidy)                  docker run --rm -it -v $PWD:/data spidy ;;
(splunk)                 docker run -p 8000:8000 -e "SPLUNK_START_ARGS=--accept-license" -e "SPLUNK_PASSWORD=splunksplunk" splunk/splunk:latest ;;
(spotify)                docker run -d -v /etc/localtime:/etc/localtime:ro -v /tmp/.X11-unix:/tmp/.X11-unix -e DISPLAY=unix$DISPLAY --device /dev/snd:/dev/snd -v $HOME/.spotify/config:/home/spotify/.config/spotify -v $HOME/.spotify/cache:/home/spotify/spotify --name spotify ${DOCKER_REPO_PREFIX}/spotify ;;
(staruml)                shift; docker run -it --rm -v "$(pwd)":/starUML -w /starUML -v /etc/group:/etc/group:ro -v /etc/passwd:/etc/passwd:ro -v /etc/shadow:/etc/shadow:ro -v /etc/sudoers.d:/etc/sudoers.d:ro -v /tmp/.X11-unix:/tmp/.X11-unix:rw --name staruml -e DISPLAY=unix$DISPLAY jamesmstone/staruml "$@" ;;
(spotify-wine)           docker run --rm -it -v /etc/localtime:/etc/localtime:ro --cpuset-cpus 0 -v /tmp/.X11-unix:/tmp/.X11-unix  -e DISPLAY=unix$DISPLAY --device /dev/snd:/dev/snd --name spotify-wine ${DOCKER_REPO_PREFIX}/spotify-wine bash ;;
(sublime-text-3)         docker run -d -it -w $HOME/Documents -v $HOME/.config/sublime-text-3:$HOME/.config/sublime-text-3 -v $HOME/Documents:$HOME/Documents -v /tmp/.X11-unix:/tmp/.X11-unix -v $HOME/.local/share/recently-used.xbel:$HOME/.local/share/recently-used.xbel -e DISPLAY=$DISPLAY -e NEWUSER=$USER -e LANG=en_US.UTF-8 sublime-text-3 ;;
(subsonic)               docker run -d -it -p 4040:4040 -v $PWD:/var/music emauve/subsonic:6.0 ;;
(t)                      shift; docker run -t --rm -v "${HOME}/.trc:/root/.trc" --log-driver none ${DOCKER_REPO_PREFIX}/t "$@" ;;
(tarsnap)                shift; docker run --rm -it -v "${HOME}/.tarsnaprc:/root/.tarsnaprc" -v "${HOME}/.tarsnap:/root/.tarsnap" -v "$HOME:/root/workdir" ${DOCKER_REPO_PREFIX}/tarsnap "$@" ;;
(telnet)                 shift; docker run -it --rm --log-driver none ${DOCKER_REPO_PREFIX}/telnet "$@" ;;
(tesseract)              shift; docker run --rm -v `pwd`:/work -w /work vimagick/tesseract $* ;;
(termboy)                shift
                         local game=$1
                         docker run --rm -it --device /dev/snd --name termboy ${DOCKER_REPO_PREFIX}/nes "/games/${game}.rom" ;;
(termshark)              docker run -it --privileged --net host lukaszlach/termshark ;;
(tetris)                 docker run -it tetris ;;
(texlive)                docker run -it -w '/mnt' -v `pwd`:/mnt texlive /bin/bash -c './compile.sh' ;;
(theia)                  docker run -it -p 3000:3000 -v "$(pwd):/home/project:cached" theiaide/theia:next ;;
(latex)                  shift; docker run --rm -it -v $(pwd):/source schickling/latex $* ;;
(tor-proxy)              docker run -d --restart always -v /etc/localtime:/etc/localtime:ro -p 9050:9050 --name torproxy ${DOCKER_REPO_PREFIX}/tor-proxy ;;
(tor-relay)              docker run -d --restart always -v /etc/localtime:/etc/localtime:ro -p 9001:9001 --name tor-relay ${DOCKER_REPO_PREFIX}/tor-relay -f /etc/tor/torrc.bridge ;;
(tor-router)             docker run -d --restart always -v /etc/localtime:/etc/localtime:ro -p 9040:22340 -p 5353:22353 --name tor-router ${DOCKER_REPO_PREFIX}/tor-router ;;
(tor)                    docker run -d --net host --name tor ${DOCKER_REPO_PREFIX}/tor
                         sudo setup-tor-iptables
                         browser-exec "https://check.torproject.org/" ;;
(torbrowser)             docker run -d -v /etc/localtime:/etc/localtime:ro -v /tmp/.X11-unix:/tmp/.X11-unix -e "DISPLAY=unix${DISPLAY}" -e GDK_SCALE -e GDK_DPI_SCALE --device /dev/snd --name torbrowser ${DOCKER_REPO_PREFIX}/tor-browser ;;
(tormessenger)           docker run -d -v /etc/localtime:/etc/localtime:ro -v /tmp/.X11-unix:/tmp/.X11-unix -e "DISPLAY=unix${DISPLAY}" -e GDK_SCALE -e GDK_DPI_SCALE --device /dev/snd --name tormessenger ${DOCKER_REPO_PREFIX}/tor-messenger ;;
(traceroute)             shift; docker run --rm -it --net host ${DOCKER_REPO_PREFIX}/traceroute "$@" ;;
(transmission)           docker run -d --name transmission -v /home/jessie/Torrents:/transmission/download -p 9091:9091 -p 51413:51413 -p 51413:51413/udp ${DOCKER_REPO_PREFIX}/transmission ;;
(transmission-ui)        docker run -v /tmp/.X11-unix:/tmp/.X11-unix -v /home/jessie/Torrents:/Torrents -e DISPLAY=unix$DISPLAY ${DOCKER_REPO_PREFIX}/transmission-ui ;;
(travis)                 shift; docker run -it --rm -v "${HOME}/.travis:/root/.travis" -v "$(pwd):/usr/src/repo:ro" --workdir /usr/src/repo --log-driver none ${DOCKER_REPO_PREFIX}/travis "$@" ;;
(typst)                  docker run -it -v $PWD:/workdir -w /workdir ghcr.io/typst/typst:latest ;;
(ubuntu)                 docker run -it --rm -v $PWD:/workdir -w /workdir -v /tmp/.X11-unix:/tmp/.X11-unix -e DISPLAY=unix$DISPLAY ubuntu ;;
(ulfm)                   docker pull abouteiller/mpi-ft-ulfm
                         alias make='docker run -v $PWD:$PWD:V -w $PWD abouteiller/mpi-ft-ulfm make'
                         alias mpirun='docker run -v $(pwd):$(pwd):V -w $(pwd) abouteiller/mpi-ft-ulfm mpirun --oversubscribe -mca btl tcp,self' ;;
(ulfm2)                  DOCKER=bnicolae/veloc-tutorial
                         docker pull $DOCKER
                         alias make='docker run -v $PWD:$PWD:Z -w $PWD '$DOCKER' make'
                         alias mpirun='docker run -v $(pwd):$(pwd):Z -w $(pwd) '$DOCKER' mpirun --oversubscribe -mca btl tcp,self'
                         alias mpiexec='docker run -v $(pwd):$(pwd):Z -w $(pwd) '$DOCKER' mpiexec --oversubscribe -mca btl tcp,self'
                         alias mpicc='docker run -v $(pwd):$(pwd):Z -w $(pwd) '$DOCKER' mpicc'
                         alias mpif90='docker run -v $(pwd):$(pwd):Z -w $(pwd) '$DOCKER' mpif90' ;;
(url-to-epub)            docker run --user $UID  --volume /tmp:/data captn3m0/url-to-epub:latest --output /data/articulated-restraint.epub --cover-url https://i.gr-assets.com/images/S/compressed.photo.goodreads.com/books/1548962694l/43782466._SY475_.jpg  https://www.tor.com/2019/02/06/articulated-restraint-mary-robinette-kowal/ ;;
(ubuntu_pga)             docker run -it --rm -v $PWD:/workdir -w /workdir -v /tmp/.X11-unix:/tmp/.X11-unix -e DISPLAY=unix$DISPLAY ubuntu_pga ;;
(ubuntu_pga_dev)         docker run -it --rm -v $PWD:/workdir -w /workdir -v /tmp/.X11-unix:/tmp/.X11-unix -e DISPLAY=unix$DISPLAY ubuntu_pga_dev ;;
(alpine_pga)             docker run -it --rm -v $PWD:/workdir -w /workdir -v /tmp/.X11-unix:/tmp/.X11-unix -e DISPLAY=unix$DISPLAY alpine_pga ;;
(alpine_pga_testing)     docker run -it --rm -v $PWD:/workdir -w /workdir -v /tmp/.X11-unix:/tmp/.X11-unix -e DISPLAY=unix$DISPLAY alpine_pga_testing ;;
(alpine)                 docker run -it --rm -v $PWD:/workdir -w /workdir -v /tmp/.X11-unix:/tmp/.X11-unix -e DISPLAY=unix$DISPLAY alpine ;;
(virtualbox)             sudo modprobe vboxdrv
                         docker run -d -v /tmp/.X11-unix:/tmp/.X11-unix -e DISPLAY=unix$DISPLAY --privileged --name virtualbox ${DOCKER_REPO_PREFIX}/virtualbox ;;
(valgrind)               shift; docker run -v $PWD:/workdir -w /workdir -it valgrind $* ;;
(vlc)                    docker run -d -v /etc/localtime:/etc/localtime:ro --device /dev/snd --device /dev/dri -v /tmp/.X11-unix:/tmp/.X11-unix -e DISPLAY=unix$DISPLAY --name vlc ${DOCKER_REPO_PREFIX}/vlc ;;
(visualstudio)           docker run -d -v /etc/localtime:/etc/localtime:ro -v /tmp/.X11-unix:/tmp/.X11-unix -e "DISPLAY=unix${DISPLAY}" --device /dev/dri --name visualstudio ${DOCKER_REPO_PREFIX}/vscode ;;
(vim4cpp)                docker run -v /tmp/.X11-unix:/tmp/.X11-unix -v $(pwd):/home/workspace -w /home/workspace -e DISPLAY=unix$DISPLAY --name vim4cpp boyuw/vim4cpp ;;
(vscode)                 docker run -d -v /tmp/.X11-unix:/tmp/.X11-unix -v $HOME:/home/user -e DISPLAY=unix$DISPLAY --device /dev/dri --name vscode ${DOCKER_REPO_PREFIX}/vscode ;;
(watchman)               docker run -d -v /etc/localtime:/etc/localtime:ro -v "${HOME}/Downloads:/root/Downloads" --name watchman ${DOCKER_REPO_PREFIX}/watchman --foreground ;;
(wps)                    shift; docker run -it --rm -v $PWD:/workdir -w /workdir -v /tmp/.X11-unix:/tmp/.X11-unix -e DISPLAY=unix$DISPLAY wps $* ;;
(wee-slack)              docker run -it -v /etc/localtime:/etc/localtime:ro wee-slack ;;
(windows)                docker run -it --rm -p 8006:8006 --device=/dev/kvm --cap-add NET_ADMIN --stop-timeout 120 dockurr/windows
                         google-chrome http://localhost:8006 ;;
(wireguard)              docker run --rm -it --name wireguard --privileged -v /lib/modules:/lib/modules:ro -v /usr/src:/usr/src:ro r.j3ss.co/wireguard ;;
(wireshark)              docker run -d -v /etc/localtime:/etc/localtime:ro -v /tmp/.X11-unix:/tmp/.X11-unix -v $PWD:/workdir -w /workdir -e DISPLAY=unix$DISPLAY --name wireshark ${DOCKER_REPO_PREFIX}/wireshark ;;
(wrk)                    shift; docker run -it --rm --log-driver none --name wrk ${DOCKER_REPO_PREFIX}/wrk "$@" ;;
(ykman)                  docker run --rm -it --device /dev/bus/usb --device /dev/us--name ykpersonalize ${DOCKER_REPO_PREFIX}/ykpersonalize ;;
(ykpersonalize)          docker run --rm -it --device /dev/bus/usb --device /dev/us--name ykpersonalize ${DOCKER_REPO_PREFIX}/ykpersonalize ;;
(yubico-piv-tool)        docker run --rm -it --device /dev/bus/usb --device /dev/us--name yubico-piv-tool ${DOCKER_REPO_PREFIX}/yubico-piv-tool ;;
(znc)                    docker run --restart always -d --name znc -p 6697:6697 -v /volumes/znc:/home/user/.znc ${DOCKER_REPO_PREFIX}/znc ;;
(zimit)                  docker run  -v /output:/output --shm-size=1gb ghcr.io/openzim/zimit zimit --url $1 --name myzimfile --workers 2 --waitUntil domcontentloaded ;;
(radare)                 mkdir ~/workdir
                         chmod a+xwr ~/workdir
                         docker run --rm -it -v ~/workdir:/home/nonroot/workdir remnux/radare2 bash ;;
(metasploit)             docker run --rm -it -p 443:443 -v ~/.msf4:/root/.msf4 -v /tmp/msf:/tmp/data remnux/metasploit ;;
(remnux)                 mkdir ~/workdir
                         chmod a+xwr ~/workdir
                         docker run --rm -it -v ~/workdir:/home/thug/logs remnux/thug bash ;;
(cyberchef)              sudo docker run -d -p 8080:80 remnux/cyberchef
                         google-chrome http://localhost:8080 ;;
(jsdetox)                sudo docker run --rm -p 3000:3000 remnux/jsdetox
                         google-chrome http://localhost:3000 ;;
(pescanner)              mkdir ~/workdir
                         chmod a+xwr ~/workdir
                         sudo docker run --rm -it -v ~/workdir:/home/nonroot/workdir remnux/pescanner bash ;;
(mastiff)                mkdir ~/workdir
                         chmod a+xwr ~/workdir
                         sudo docker run --rm -it -v ~/workdir:/home/nonroot/workdir remnux/mastiff ;;
(crits)                  mkdir ~/workdir
                         chmod a+xwr ~/workdir
                         sudo docker run --rm -it -v ~/workdir:/home/nonroot/workdir -p 8443:8443 remnux/crits 
                         google-chrome http://localhost:8443 ;;
(viper)                  mkdir ~/workdir
                         chmod a+xwr ~/workdir
                         sudo docker run --rm -p 9090:9090 -v ~/workdir:/home/nonroot/workdir remnux/viper ;;
(maltrieve)              mkdir ~/workdir
                         chmod a+xwr ~/workdir
                         sudo docker run --rm -it -v ~/workdir:/archive remnux/maltrieve bash ;;
(volatility)             mkdir ~/workdir
                         chmod a+xwr ~/workdir
                         sudo docker run --rm -it -v ~/workdir:/home/nonroot/memdumps remnux/volatility bash ;;
(rekall)                 mkdir ~/workdir
                         chmod a+xwr ~/workdir
                         sudo docker run --rm -it -p 8000:8000 -v ~/workdir:/home/nonroot/files remnux/rekall ;;
(v8)                     mkdir ~/workdir
                         chmod a+xwr ~/workdir
                         sudo docker run --rm -it -v ~/workdir:/home/nonroot/files remnux/v8 bash ;;
(docker-handbrake)       docker run -p 5800:5800 -v ~/config:/config:rw -v ~/storage:/storage:ro -v $convert_dir:/watch:rw -v $converted_dir:/output:rw jlesage/handbrake
                         google-chrome 'http://localhost:5800' ;;
(hbrake-interactive)     docker run -e WIDTH=1280 -e HEIGHT=720 -p 3389:3389 -p 8080:8080 -v $convert_dir:/media:rw -v ~/config:/config:rw coppit/handbrake
                         google-chrome 'http://localhost:8080/#/client/c/HandBrake' ;;
(hbrake-noninteractive)  docker run --cap-add=SYS_NICE -v $convert_dir:/watch:ro -v $converted_dir:/output:rw -v ~/config:/config:rw coppit/handbrake ;;
(hbrake-both)            docker run -e WIDTH=1280 -e HEIGHT=720 -p 3389:3389 -p 8080:8080 --cap-add=SYS_NICE -v $convert_dir:/watch:ro -v $converted_dir:/output:rw -v $convert_dir:/media:rw -v ~/config:/config:rw coppit/handbrake ;;
(hugin)                  docker run --rm -it -v $(pwd):/source schickling/hugin ;;
(jekyll)                 docker run --rm -it -p 4000:4000 -v $(pwd):/source schickling/jekyll ;;
(nodejs)                 docker run --rm -it -v $(pwd):/source schickling/nodejs ;;
(obs)                    distrobox create --image ghcr.io/ublue-os/obs-studio-portable:latest --name obs --pull
                         distrobox enter --name obs -- /opt/obs-portable/obs-portable ;;
(octave)                 docker run --rm -it -v $(pwd):/source schickling/octave ;;
(opencv2)                docker run --rm -it -v $(pwd):/source schickling/opencv ;;
(openldap)               sudo docker run -it --rm -u $(id -u) -v $PWD:/workdir -w /workdir openldap ;;
(o_openldap)             docker run -p 389:389 -p 636:636 --name my-openldap-container --detach osixia/openldap:1.2.4 ;;
(o_openldap_search)      docker exec my-openldap-container ldapsearch -x -H ldap://localhost -b dc=example,dc=org -D "cn=admin,dc=example,dc=org" -w admin ;;
(o_openldap_add)         docker exec my-openldap-container ldapadd    -x -H ldap://localhost                      -D "cn=admin,dc=example,dc=org" -w admin -f /container/service/slapd/assets/test/new-user.ldif ;;
(o_openldap_add_2)       shift;
                         docker cp $1 my-openldap-container:/$1
                         docker exec my-openldap-container ldapadd    -x -H ldap://localhost                      -D "cn=admin,dc=example,dc=org" -w admin -f /$1 ;;
(o_openldap_config)      docker run --env LDAP_ORGANISATION="My Company" --env LDAP_DOMAIN="my-company.com" --env LDAP_ADMIN_PASSWORD="JonSn0w" --detach osixia/openldap:1.2.4 ;;
(o_openldap_populate_f)  docker run --volume ./bootstrap.ldif:/container/service/slapd/assets/config/bootstrap/ldif/50-bootstrap.ldif osixia/openldap:1.2.4 --copy-service ;;
(o_openldap_populate_d)  docker run --volume ./ldif:/container/service/slapd/assets/config/bootstrap/ldif/custom osixia/openldap:1.2.4 --copy-service ;;
(o_openldap_populate_e)  docker run --volume /data/slapd/database:/var/lib/ldap --volume /data/slapd/config:/etc/ldap/slapd.d --detach osixia/openldap:1.2.4 ;;
(rust)                   docker run --rm -it -v $(pwd):/source schickling/rust ;;
(sonar_server)           docker run -d -p 9000:9000 -d --name sonar_server sonar_server ;;
(sonar_scanner)          docker run -e SONAR_IP=$(docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' sonar_server) -e PROJECT_NAME=$(basename $PWD) -v $PWD:/workdir -w /workdir sonar_scanner ;;
(sonar_scanner_go)       docker run -e SONAR_IP=$(docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' sonar_server) -e PROJECT_NAME=$(basename $PWD) -v $PWD:/workdir -w /workdir sonar_scanner_go ;;
(sonarr)                 docker run \
                           -e PUID=1000 \
                           -e PGID=1000 \
                           -e TZ=Europe/London \
                           -p 8989:8989 \
                           -v ~/sonarr/data:/config \
                           -v ~/sonarr/tvseries:/tv \
                           -v ~/sonarr/downloadclient-downloads:/downloads \
                           linuxserver/sonarr ;;
(stitch)                 docker run --rm -v $PWD:/data openstitching/stitch:latest * ;;
(syslog)                 docker run -it -p 514:514/udp -p 601:601 --name syslog-ng balabit/syslog-ng:latest -edv ;;
(radarr)                 docker run \
                           -e PUID=1000 \
                           -e PGID=1000 \
                           -e TZ=Europe/London \
                           -p 7878:7878 \
                           -v ~/sonarr/data:/config \
                           -v ~/sonarr/tvseries:/tv \
                           -v ~/sonarr/downloadclient-downloads:/downloads \
                           linuxserver/radarr ;;
(lidarr)                 docker run \
                           -e PUID=1000 \
                           -e PGID=1000 \
                           -e TZ=Europe/London \
                           -p 8686:8686 \
                           -v ~/sonarr/data:/config \
                           -v ~/sonarr/tvseries:/tv \
                           -v ~/sonarr/downloadclient-downloads:/downloads \
                           linuxserver/lidarr ;;
(speech-recognition)     docker run -it -v /dev/snd:/dev/snd --privileged binkybong/speech-recognition /bin/bash ;;
(djtones-sprecognition)  docker run -it -v $PWD:/mnt/data djtones/speech-recognition ;;
(speech-to-text)         docker run -it -v $PWD:/workdir buriburisuri/speech-to-text-wavenet ;;
(kaldi)                  docker run -it -v $PWD:/workdir kaldi ;;
(kaldi-gstreamer-server) docker run -it -v $PWD:/workdir kaldi-gstreamer-server ;;
(kaldi-pop-up)           docker run -it --name kaldi_pua --volume $PWD/audio_in/:/audio_in/ hipstas/kaldi-pop-up-archive:v1 ;;
(maus)                   docker run -v `pwd`:/export  stevecassidy/maus \
                         /home/maus/maus OUT=/export/test.TextGrid \
                         OUTFORMAT=TextGrid \
                         SIGNAL=/export/test/1_1119_2_22_001-ch6-speaker16.wav \
                         BPF=/export/test/1_1119_2_22_001.bpf \
                         LANGUAGE=aus
                         ;;
(swagger-ui)             docker run -d -p 8080:80 -e API_URL=http://localhost:4000/swagger schickling/swagger-ui ;;
(openvpn)                shift; docker-compose run vpn $* ;;
(youtube-dl)             shift; docker run -it --rm -v "$(pwd):/src" -w /src jbergknoff/youtube-dl -f 'bestvideo[ext=mp4]+bestaudio[ext=m4a]' $* ;;
(centos-xfce-vnc)        shift; docker run -d -p 5901:5901 -p 6901:6901 consol/centos-xfce-vnc
                         google-chrome 'http://localhost:6901/?password=vncpassword'
                         #docker run -d -p 5901:5901 -p 6901:6901 --user $(id -u):$(id -g) consol/centos-xfce-vnc
                         #docker run -it -p 5901:5901 -p 6901:6901 consol/centos-xfce-vnc bash
                         ;;
(centos-i3-vnc)          docker run -it -p 5901:5901 -p 8080:8080 centos-i3-vnc ;;
(ubuntu-xfce-vnc)        shift; docker run -d -p 5901:5901 -p 6901:6901 consol/ubuntu-xfce-vnc
                         google-chrome 'http://localhost:6901/?password=vncpassword'
                         ;;
(centos-icewm-vnc)       shift; docker run -d -p 5901:5901 -p 6901:6901 consol/centos-icewm-vnc
                         google-chrome 'http://localhost:6901/?password=vncpassword'
                         ;;

(ubuntu-icewm-vnc)       shift; docker run -d -p 5901:5901 -p 6901:6901 consol/ubuntu-icewm-vnc
                         google-chrome 'http://localhost:6901/?password=vncpassword'
                         ;;
(ubuntu-lxde-vnc)        shift; docker run -d -p 6080:6080 -p 5900:5900 dorowu/ubuntu-desktop-lxde-vnc
                         #docker run -d -p 6080:6080 -p 5900:5900 -e VNC_PASSWORD=mypassword dorowu/ubuntu-desktop-lxde-vnc
                         #docker run -d -p 6080:6080 -p 5900:5900 -e RESOLUTION=1920x1080 dorowu/ubuntu-desktop-lxde-vnc
                         #docker run -it --rm -p 6080:80 --device /dev/snd -e ALSADEV=hw:2,0 dorowu/ubuntu-desktop-lxde-vnc
                         #google-chrome 'http://127.0.0.1:6080/#/?video'
                         #google-chrome 'http://127.0.0.1:6080/vnc.html?resize=remote'
                         google-chrome 'http://localhost:6080/vnc.html?autoconnect=1&autoscale=0&quality=3'
                         ;;
(upsource)               docker run -it \
                           -v $HOME/upsource/data:/opt/upsource/data \
                           -v $HOME/upsource/conf:/opt/upsource/conf \
                           -v $HOME/upsource/logs:/opt/upsource/logs \
                           -v $HOME/upsource/backups:/opt/upsource/backup \
                           -p 80:8080 \
                           jetbrains/upsource:2019.1.1623 ;;
(neural-style)           docker run -v $PWD:/out -w /out -i -t neural-style th /root/neural-style/neural_style.lua -gpu -1 -style_image style.jpg -content_image content.jpg ;;
# (docker-neural-style)    git clone https://github.com/jcjohnson/neural-style.git ;
#                          cd neural-style ;
#                          bash models/download_models.sh ;
#                          docker run -i -v $PWD:/neural-style -t docker-neural-style -gpu -1 -style_image examples/inputs/starry-night.jpg -content_image examples/inputs/hoovertowernight.jpg ;;
# (neural-style-k)         docker run -it -v $PWD:/workdir -w /workdir kchentw/neural-style /root/torch/install/bin/th /root/neural-style/neural_style.lua -gpu -1 -style_image style.jpg -content_image content.jpg ;;
# (neural-style-h)         docker run -it -v $PWD:/root/input-images/ heschoon/neural-style /root/torch/install/bin/th /root/neural-style/neural_style.lua -gpu -1 -style_image ../input-images/style.jpg -content_image ../input-images/content.jpg -image_size 256 ;;
# (neural-style-docker)    nvidia-docker run --rm -v $PWD:/images albarji/neural-style --content somecontent.png --style somestyle.png ;;
esac

}

docker_app(){
	docker_prep $*
	docker_run  $*
}

docker_pull_send(){
    docker pull $3
    docker save $3 | ssh $1@$2 "sudo docker load"
}

docker_build_send(){
    docker build -t $3 .
    docker save $3 | ssh $1@$2 "sudo docker load"
}

docker_send(){
    docker save $3 | ssh $1@$2 "sudo docker load"
}

docker_authorize(){
    echo '{'                                    | sudo tee    /etc/docker/daemon.json
    echo '    "insecure-registries" : ["'$1'"]' | sudo tee -a /etc/docker/daemon.json
    echo '}'                                    | sudo tee -a /etc/docker/daemon.json

    sudo systemctl stop  docker
    sudo systemctl start docker

}

docker_prun(){
    export  http_proxy=$(cat ~/.paths | grep  http_proxy | cut -d'=' -f2)
    export https_proxy=$(cat ~/.paths | grep https_proxy | cut -d'=' -f2)
    export no_proxy=$(echo 192.168.197.{1..255} | sed 's/ /,/g'),127.0.0.1,localhost
    sudo docker run -e http_proxy=$http_proxy -e https_proxy=$https_proxy -e no_proxy=$no_proxy $*
}

docker_save_images(){
    docker save $(docker images | tail -n+2 | awk '{print $1}' | paste -d' ' -s) | gzip > images.gz
}

docker_load_images(){
    zcat images.gz | docker load
}

docker_load_registry(){
    docker images > /tmp/pre
    zcat images.gz | docker load
    docker images > /tmp/post

    comm -13 /tmp/pre /tmp/post | while read line
    do
        image=$( echo $line | awk '{print $1}' )
        docker tag $image localhost:5000/$image
        docker push localhost:5000/$image
    done
}
