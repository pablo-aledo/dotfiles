TREE_DST=$HOME/root
TREE_SRC=$HOME/Alejandria

lnk_hierarchy(){
    args=$(echo $* | awk '{$NF=""; print}')
    name=$(echo $* | awk '{print $NF}')


    dst_paths=$TREE_DST
    current_path=$TREE_DST
    for a in $( echo $args | sed 's/ /\n/g' )
    do
        current_path=$current_path/$a
        dst_paths="$dst_paths $current_path"
    done

    for a in $( echo $dst_paths | sed 's/ /\n/g' )
    do
        if [ ! "$(ls $a 2>/dev/null)" ]
        then
            #echo $a does not exist
            mkdir $a
            continue
        fi

        if [ -L $a ]
        then
            #echo $a is link
            src=$(readlink $a)
            rm -f $a
            mkdir $a
            ln -s $src $a/$(basename $a)
            continue
        fi

        if [ -d $a ]
        then
            #echo $a is folder
            continue
        fi
    done

    ln -s $TREE_SRC/$name $current_path

}

lnk_map(){
    cat $1 | while read line
    do
        title=$(echo $line | sed 's/\(.*\) -> \(.*\)/\1/g' )
        class=$(echo $line | sed 's/\(.*\) -> \(.*\)/\2/g' )

        echo mkdir -p $class
        echo ln -s \"\$SRC/$title\" $class/
        echo
    done
}

lnk_hierarchy_missing(){
    comm -13 <(find -L $TREE_DST | while read line; do echo $(basename $line); done | sort | uniq) <(ls $TREE_SRC | sort | uniq)
}

lnk_hierarchy_fill_scale(){
    [ "$1" = "" ] && scale=10000
    [ "$1" = "" ] || scale=$1
    find $TREE_DST -type l | while read line
    do
        echo "\e[34m $line \e[0m"
        rm -f "$line"
        mkdir  "$line"
        find $(echo $line | sed "s|$TREE_DST|$TREE_SRC|g" ) -type f | while read file
        do
            echo "\e[33m     $file \e[0m"
            size=$(ll $file | awk '{print $5}')
            size=$(( $size / $scale ))
            mkdir -p $(dirname $file | sed "s|$TREE_SRC|$TREE_DST|g")
            [ -e "$(echo $file | sed "s|$TREE_SRC|$TREE_DST|g")" ] && continue
            dd if=/dev/zero bs=1 count=$size of="$(echo $file | sed "s|$TREE_SRC|$TREE_DST|g")" 2>/dev/null
        done
    done
}
