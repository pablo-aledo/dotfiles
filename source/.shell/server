#source $(dirname $(readlink -f $0))/pkg
#source $(dirname $(readlink -f $0))/easypasswd
#source $(dirname $(readlink -f $0))/myshell

server(){

	if [ $1 = "vnc" ]
	then
		pkg install x11vnc
		while true
		do 
			x11vnc
			sleep 1
		done
	fi

	if [ $1 = "ssh" ]
	then
		pkg install openssh-server
		pkg install tmux
		easypasswd
		myshell tmux
		sudo /etc/init.d/ssh restart
		sudo mkdir /var/run/sshd
		sudo /usr/sbin/sshd -p22
	fi

	if [ $1 = "ssh80" ]
	then
		while true
		do
			sudo /usr/sbin/sshd -d -p 80
			sleep 1
		done
	fi

	if [ $1 = "telnet" ]
	then
		pkg install telnetd
		easypasswd
	fi

	if [ $1 = "nx" ]
	then
		pkg install nomachine
		sudo sed -i 's/#VirtualDesktopAuthorization 1/VirtualDesktopAuthorization 0/g' /usr/NX/etc/server.cfg
		sudo sed -i 's/#PhysicalDesktopAuthorization 1/PhysicalDesktopAuthorization 0/g' /usr/NX/etc/server.cfg
		sudo /etc/init.d/nxserver restart
	fi

	if [ $1 = "lamp" ]
	then
		pkg install lamp
	fi

	if [ $1 = "ftp" ]
	then
		pkg install ftpd	
	fi

	if [ $1 = "sftp" ]
	then
		pkg install openssh-sftp-server
		easypasswd
		sudo /etc/init.d/ssh restart
	fi

	if [ $1 = "x2go" ]
	then
		pkg install x2go_server
	fi

	if [ $1 = "owncloud" ]
	then
		pkg install owncloud
	fi

	if [ $1 = "vpn" ]
	then
		pkg install vpn_server
	fi

	if [ $1 = "gitlab" ]
	then
		pkg install gitlab
	fi

	if [ $1 = "smtp" ]
	then
		pkg install smtp_server
	fi

	if [ $1 = "codiad" ]
	then
		pkg install codiad
	fi

	if [ $1 = "jenkins" ]
	then
		pkg install jenkins
	fi

	if [ $1 = "subsonic" ]
	then
		pkg install subsonic
	fi

	if [ $1 = "mediasonic" ]
	then
		pkg install mediasonic
	fi

	if [ $1 = "mediatomb" ]
	then
		pkg install mediatomb
	fi

	if [ $1 = "pptp" ]
	then
		pkg install pptpd
	fi

	if [ $1 = "deluge" ]
	then
		pkg install deluged
	fi

	if [ $1 = "webmin" ]
	then
		pkg install webmin
	fi

	if [ $1 = "webcam" ]
	then
		pkg install mjpeg_streamer
	fi

	if [ $1 = "syncthing" ]
	then
		pkg install syncthing
	fi

	if [ $1 = "aria2" ]
	then
		pkg install webui-aria2
	fi

	if [ $1 = "noip" ]
	then
		pkg install noip
	fi

	if [ $1 = "emby" ]
	then
		pkg install emby
	fi

	if [ $1 = "hostap" ]
	then
		pkg install hostap
	fi

	if [ $1 = "jupyter" ]
	then
		pkg install jupyter
		jupyter notebook
	fi

	if [ $1 = "socks" ]
	then
		ssh -N -D 0.0.0.0:1080 localhost
	fi

	if [ $1 = "iodine" ]
	then
		pkg install iodine
		while true
		do
			sudo iodined -c -P `pword` -f 10.0.0.1 i.iodine-pga.cu.cc
			sleep 10
		done
	fi

	if [ $1 = "proxy" ]
	then
		pkg install squid3
		sudo squid3
	fi

	if [ $1 = "webconsole" ]
	then
		ssh_server
		pkg install webconsole
	fi

	if [ $1 = "shellinabox" ]
	then
		easypasswd
		pkg install shellinabox
	fi

	if [ $1 = "gotty" ]
	then
		pkg install gotty
		( echo '#!/bin/bash'; echo '[ `tmux a #` ] || tmux' ) | sudo tee /usr/bin/tmux_a
	       	sudo chmod +x /usr/bin/tmux_a
		echo 'gotty -w tmux_a' > ~/gotty.sh
		chmod +x ~/gotty.sh 
		nohup ~/gotty.sh &
	fi

	if [ $1 = "pydio" ]
	then
		pkg install pydio
	fi

	if [ $1 = "nextcloud" ]
	then
		pkg install nextcloud
	fi

	if [ $1 = "guacamole" ]
	then
		pkg install guacamole
	fi

	if [ $1 = "mosh" ]
	then
		pkg install mosh
	fi

	if [ $1 = "flowplayer" ]
	then
		pkg install flowplayer
	fi

	if [ $1 = "etherpad" ]
	then
		pkg install etherpad
		cd ~/etherpad-lite
		bin/run.sh
	fi
	if [ $1 = "letschat" ]
	then
		pkg install letschat
		cd ~/lets-chat 
		npm start
	fi
	if [ $1 = "rocketchat" ]
	then
		pkg install rocketchat-server
	fi
	if [ $1 = "jitsi" ]
	then
		pkg install jitsi
	fi
	if [ $1 = "input" ]
	then
		n=8000
		for a in `find /dev/input/by-path/ -type l`
		do 
			echo $a
			tmux new -d -s input-$n "while true; do nc -l -p $n | sudo tee $a ; done"
			n=$((n+1))
		done
	fi

	if [ $1 = novnc ]
	then
		pkg install novnc
		tmux new -d -s novnc "cd ~/noVNC; ./utils/launch.sh --vnc localhost:5900"
		tmux new -d -s vnc   "x11vnc"
	fi

	if [ $1 = novnc2 ]
	then
		pkg install novnc2
		vnc4server -kill :1
		tmux new -d -s novnc "cd ~/noVNC; ./utils/launch.sh --vnc localhost:5901"
		tmux new -d -s vnc   "vnc4server"
	fi

	if [ $1 = rssmail ]
	then
		pkg install rsstail
		[ -e /usr/bin/mutt ] || pkg install mutt

		rssfeeds=`cat .canto/conf.py | egrep '^add' | cut -d'"' -f2 | sed -e 's/^/-u "/g' -e 's/$/"/g' | paste -d' ' -s`
		echo rsstail $rssfeeds -i10 -zP -ld | bash | while read line
		do 

			previous=$current

			if [ "$(echo $line | egrep '^Title:')" != "" ] && [ "$previous" = "link" ]
			then
				echo "\e[31m $title \e[0m $link "
				(echo $link) | mutt -s "$title" -- pablo.aledo.rss@gmail.com
				sleep 1
			fi

			case $line in 
				(Title:*)       title=`echo $line       | sed 's/Title://g'`; current="title";;
				(Link:*)        link=`echo $line        | sed 's/Link://g'`; current="link";;
				(Description:*) description=`echo $line | sed 's/Description://g'`; current="description";;
			esac

			if [ "$current" = "description" ] && [ "$previous" = "link" ]
			then
				echo "\e[31m $title \e[0m $link "
				(echo $link; echo $description) | mutt -e "set content_type=text/html" -s "$title" -- pablo.aledo.rss@gmail.com
				sleep 1
			fi

		done
	fi

}



