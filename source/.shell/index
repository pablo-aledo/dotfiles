

index_ncdu(){
      cd ~/servers/index/
      echo "\e[34m ncdu \e[0m"
      ncdu /media/removable/2TB2/homes/admin/ -o ncdu
}

index_files(){
      cd ~/servers/index/
      echo "\e[34m files \e[0m"
      find /media/removable/2TB2/homes/admin/ > files
}

index_candidates(){
      cd ~/servers/index/
      echo "\e[34m convert_candidates \e[0m"
      convert_candidates > convert_candidates
}

index_videos_cl(){
      learning.configure ~/learning
      cd ~/servers/index/
      echo "\e[34m videos_cl \e[0m"
      if [ -e ~/servers/index/videos_cl_prev ]
      then
          \cp ~/servers/index/videos_cl_prev /tmp/classify_folders
          classify_folders_incremental /media/removable/2TB2/homes/admin/Videos > /tmp/classify_aux
          cat /tmp/classify_aux | sort > videos_cl
      else
          classify_folders /media/removable/2TB2/homes/admin/Videos > videos_cl
      fi
}

index_videos_mirror(){
      learning.configure ~/learning
      cd ~/servers/index/
      echo "\e[34m mirror \e[0m"
      rm -fr /media/DATA/videos_mirror
      sudo mkdir -p /media/DATA/videos_mirror
      ( cd /media/DATA; permissions )
      \cp videos_cl /tmp/videos_clf
      echo "\e[34m - classify \e[0m"
      ( classify_and_mirror /media/removable/2TB2/homes/admin/Videos /media/DATA/videos_mirror > /dev/null )
      echo "\e[34m - ncdu_mirror \e[0m"
      ( cd /media/DATA/videos_mirror/; ncdu-export-symlink . ) > ncdu_mirror
}

index_size_rank(){
    learning.configure ~/learning
    cd ~/servers/index/
    echo "\e[34m size_rank \e[0m"
    [ -e ~/servers/index/size_and_rank ] && rm -fr ~/servers/index/size_and_rank
    ( mkd ~/servers/index/size_and_rank; classify_size_and_rank ) > size_and_ranks
}

index_size_rank_hist(){
    echo "\e[34m size_rank_hist \e[0m"
    cd ~/servers/index

    (
    cd size_and_rank
    for sz in $(seq 0 20)
    do
        for st in $(seq 0 5)
        do
            paste sizes stars names | awk -v st=$st -v sz=$sz -v iv=100 '( $1 > sz*iv && $1 < (sz+1)*iv ) && ( $2 == st ) {print}' | wc -l
        done
    done | paste - - - - - -
    ) > size_rank_hist
}

index_bak(){
      cd ~/servers/index/
      echo "\e[34m bak \e[0m"
      bak ncdu files convert_candidates convert_sizes videos_cl ncdu_mirror size_and_ranks size_rank_hist pairsdists canaries index_tlsh
}


index_pairsdist(){
    cd ~/servers/index/
    echo "\e[34m pairsdist \e[0m"
    [ -e pairsdist ] && rm -rf pairsdist
    mkdir -p pairsdist/configure
    mkdir -p pairsdist/documents
    cd pairsdist

cat <<EOF > configure/configure
vectorizer_method=cached_vectorizer
cached_vectorizer_method=bagofwords
learning_distance=jaccard
summarize_line_limit=999999
learning_test=false
EOF

    learning.configure .
    learning.restart

    [ -e ~/learning/cache_vectorizer ] && ln -s ~/learning/cache_vectorizer cache_vectorizer
    [ -e ~/learning/vectors ] && ln -s ~/learning/vectors vectors

    echo "\e[34m generating documents \e[0m"
    cat ../files | grep "/media/removable/2TB2/homes/admin/Videos/" | cut -d'/' -f8 | sort | uniq | while read line
    do
        #echo "\e[34m document \e[0m $line"
        #cat ../files | grep -F "/media/removable/2TB2/homes/admin/Videos/$line/" | sed "s|/media/removable/2TB2/homes/admin/Videos/[^/]*/||g" > documents/$line
        cat ../files | grep -F "/media/removable/2TB2/homes/admin/Videos/$line/" | Xargs basename | grep '\.mp4$' | while read vidname; do echo $vidname | tokenize | grep '^[a-z]*$' | grep -v '^$' | grep -v converted | paste -d' ' -s; done | sort > documents/$line

        [ -e /tmp/pause ] && echo "\e[31m ===== pause =====\e[0m"
        while [ -e /tmp/pause ] ; do sleep 10; done

    done

    cd documents

    #comm -12 <( cached_vectorizer.file_sizes | awk '$1 != 1000{print $2}' | sort ) <( md5sum * | awk '{print $1}' | sort ) | sed "s/^/$(escape3 $learning_dir/cache_vectorizer/)/g" | xargs rm -f

    echo "\e[34m hashing \e[0m"
    hashnames
    source hash.sh
    mv hash.sh unhash.sh ../tmp
    cd ..

    #learning.fit

    #closest_classifier.pairsdist | sed 's/^\([^ ]*\) \([^ ]*\) \([^ ]*\)$/\1 "\2" "\3"/g' | tee salida
    #cat salida | awk '$1 < 500' | sort -g | tee salida2
    tlsh.pairsdist 2>/dev/null | sed 's/^\([^ ]*\) \([^ ]*\) \([^ ]*\)$/\1 "\2" "\3"/g' > salida
    cat salida | sort -g > salida2

    cp salida2 salida3
	cat salida2 | cut -d'"' -f 2,4 | sed 's/"/\n/g' | sort | uniq | while read hash
    do
        name=$(cat tmp/unhash.sh | grep $hash | cut -d'"' -f4) 
        name=$(escape5 $name) 
        echo sed -i \"s/$hash/$name/g\" salida3
    done > /tmp/script
    source /tmp/script

    mv -f salida3 ../pairsdists

    cd ..
}

index_tlsh(){
    cd ~/servers/index/
    echo "\e[34m tlsh \e[0m"
    comm -13 <(cat index_tlsh | sed 's/^[^\t]*\t//g' | sort -u) <(mgrep files $* | sort -u) | while read file
    do
        false && echo $file

        tlsh -f "$file" >> index_tlsh

        [ -e /tmp/pause ] && echo "\e[31m ===== pause =====\e[0m"
        while [ -e /tmp/pause ] ; do sleep 10; done
    done
}

index_canaries(){
    cd ~/servers/index/
    echo "\e[34m canaries \e[0m"
    cat files | grep '/canary\(\.\|\)[a-z]*$' | while read line
    do
        md5=$(cat "$line" | sed 's/ /\n/g' | sort | uniq | md5sum | awk '{print $1}')
        echo $line $md5
        [ $md5 = "e8bf1d4e798eaead4d1794e8cf3bc5be" ] && continue
        echo '\e[31m CANARY FAILED \e[0m' $line
    done | tee canaries
}

index_loop(){
    index_ncdu; notify ncdu
    index_files; notify files
    index_candidates; notify candidates
    index_videos_cl; notify videos_cl
    index_videos_mirror; notify videos_mirror
    index_size_rank; notify size_rank
    index_size_rank_hist; notify size_rank_hist
    index_pairsdist; notify pairsdist
    index_canaries; notify canaries
    index_bak; notify bak
}

index_loop_notify_once(){
    index_ncdu
    index_files
    index_candidates
    index_videos_cl
    index_videos_mirror
    index_size_rank
    index_size_rank_hist
    index_pairsdist
    index_canaries
    index_bak
    notify index
}

