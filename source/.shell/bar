bar(){
    setterm -cursor off
    max=$1

    cat | while read line
    do
        python3 -c "print( ['◐', '◓', '◑', '◒'][$line%4] + ' [' + '#'*$line + ' '*($max-$line) + ']' + '($line/$max)' + '\r', end='')"
    done
    setterm -cursor on

}

bar(){

    [ `cat /tmp/width` -gt 100 ] && wide=true
    [ `cat /tmp/width` -gt 100 ] || wide=false

    [ -e /tmp/start_time ] || date +%s > /tmp/start_time

    setterm -cursor off
    max=$1
    scale=10
    it=0

    cat | while read line
    do
        perc=$(( $line*100/$max ))
        [ "$line" != "$oldline" ] && it=$(( $it + 1 ))
        oldline=$line

        start_time=$(cat /tmp/start_time)
        datenow=$(date +%s)

        [ -e /tmp/start_line ] && start_line=$(cat /tmp/start_line)
        [ -e /tmp/start_line ] || start_line=0

        [ $wide = true ] && \
        python3 -c "
import datetime
rate=float($line-$start_line)/($datenow - $start_time + 0.001)
rem_secs=int( ($max-$line)/(rate + 0.001) )
print( ['◐', '◓', '◑', '◒'][$it%4] + \
    ' [' + '#'*int($perc/$scale) + ' '*int((100-1-$perc)/$scale) + ']' + '($line/$max [' + str($perc) + '%' + ']) ' + str(datetime.timedelta(seconds=rem_secs)) + ' '*10 + '\r', end='')
"

        [ $wide = false ] && \
        python3 -c "
import datetime
rate=float($line-$start_line)/($datenow - $start_time + 0.001)
rem_secs=int( ($max-$line)/(rate + 0.001) )
print( ['◐', '◓', '◑', '◒'][$line%4] + \
    ' ($line/$max [' + str($perc) + '%' + ']) ' + str(datetime.timedelta(seconds=rem_secs)) + ' '*10 + '\r', end='')
"

    done
    setterm -cursor on

}

barcmd(){
    cmd=$1
    limit=$2

    stty size | cut -d' ' -f2 > /tmp/width

    skip=false
    [ $# -eq 3 ] && [ $3 = "skip" ] && skip=true

    setterm -cursor on
    sleep 1

    if [ $skip = false ]
    then
        zsh -c "$cmd" > /tmp/start_line 2>/dev/null
        date +%s > /tmp/start_time
    fi

    while true
    do
        zsh -c "$cmd" 2>/dev/null
        sleep 1
    done | bar $limit
}

avhbar(){
    barcmd "cat /tmp/s2files | grep Title | wc -l" $(cat /tmp/count)
}

descbar(){
    barcmd 'ls -l Descargas | grep -F "$(tmux ca -pt .1 | grep -v "^$" | tail -n1 | sed "s/^[^ ]* //g")" -B1000 | tail -n+2 | awk "{s+=\$5} END {print s}"' $(ls -l Descargas | tail -n+2 | awk "{s+=\$5} END {print s}") $*
}

ncdubar(){
    barcmd 'tmux ca -pt .1 | grep files | awk "{print \$(NF-1)}" | tail -n1' $(cat tmp/files | wc -l) $*
}

dfdbar(){
    barcmd 'df /dev/sdb | tail -n1 | awk "{print \$4}"' $(df /dev/sdb | tail -n1 | awk "{print \$2}")
}

dfubar(){
    barcmd 'df /dev/sdb | tail -n1 | awk "{print \$3}"' $(df /dev/sdb | tail -n1 | awk "{print \$2}")
}

filesbar(){
    barcmd 'cat files | wc -l' $(cat tmp/files | wc -l)
}

convertbar(){
    barcmd 'find /media/data/converted -iname "*.mp4" | wc -l' $(find /media/data/convert -iname '*.mp4' -or -iname '*.m4v' -or -iname '*.flv' -or -iname '*.mov' -or -iname '*.avi' -or -iname '*.wmv' -or -iname '*.mkv' -or -iname '*.vob' | wc -l)
}

