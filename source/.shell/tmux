tmux_extract(){

    [ $# -ge 1 ] && times=$1 || times=100
    [ $# -ge 2 ] && tail=$2  || tail=2

    tmux ca -pt .1
    for a in $(seq 1 $times)
    do
        tmux send-keys -t .1 j
        tmux ca -pt .1 | tail -n$tail | head -n1
    done

}

tma(){
    [ $# -eq 0 ] && tmux a
    [ $# -eq 1 ] && [ "$(tmux ls | cut -d: -f1 | grep $1)" != "" ] && tmux a -t $1
    [ $# -eq 1 ] && [ "$(tmux ls | cut -d: -f1 | grep $1)"  = "" ] && tmux new -s $1
}

tmkill(){

if [ $# -gt 1 ]
then
    for a in $*
    do
        tmkill $a
    done
    return
fi

tmux ls | cut -d':' -f1 | grep $1 | while read line
do
    tmux kill-session -t $line
done
}

alias tmls="tmux ls"
#alias tmc="tmux ca -pt"

tmc(){
    tmux ca -pt $1 | grep -v '^$'
}

tm_compare(){
    target1="$1"
    target2="$2"
    tmux send-keys -t clean:2.1 q
    tmux send-keys -t clean:2.2 q
    tmux send-keys -t clean:2.1 ranger Space \"$target1\" Enter
    tmux send-keys -t clean:2.2 ranger Space \"$target2\" Enter
}

tm_sanitize_bash(){
    tmux send-keys -t .1 'nc -nlvp port' 'Enter'
    tmux send-keys -t .1 'script /dev/null -c bash' 'Enter'
    tmux send-keys -t .1 'python -c "import pty; pty.spawn(' "'" '/bin/bash' "'" ')"' 'Enter'
    tmux send-keys -t .1 'C-z'
    tmux send-keys -t .1 'stty raw -echo; fg' 'Enter'
    tmux send-keys -t .1 'reset xterm' 'Enter'
    tmux send-keys -t .1 'export TERM=xterm' 'Enter'
    tmux send-keys -t .1 'export SHELL=/bin/bash' 'Enter'
    tmux send-keys -t .1 'stty size' 'Enter'
    tmux send-keys -t .1 'stty rows 20 columns 200' 'Enter'
}
