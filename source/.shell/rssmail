RSSMAIL=~/servers/rssmail
rssmail_ml=true
rssmail_webcontent=true
outbox=~/servers/outbox

rssmail() {
	name=$RSSMAIL/rss-`date +%y%m%d-%H%M`
	mkdir -p $name
	cp ~/servers/rssmail/rsstitles $name/list
}

rssmail_cut () {
	if [ $# -eq 2 ]
	then
		last_a=`basename $1`
		last_b=`basename $2`
	else
		last_a=`ls $RSSMAIL | sort -g | tail -n2 | head -n1`
		last_b=`ls $RSSMAIL | sort -g | tail -n1 | head -n1`
	fi
	last_line=`cat $RSSMAIL/$last_a/list | tail -n1`
	rm -i -f $RSSMAIL/$last_b/list_cut

	common=1
	cat $RSSMAIL/$last_b/list | while read line
	do
		[ $line = $last_line ] && common=0
		[ $common -eq 0 ] && echo $line >> $RSSMAIL/$last_b/list_cut
	done
}

rssmail_cut () {
	if [ $# -eq 2 ]
	then
		last_a=`basename $1`
		last_b=`basename $2`
	else
		last_a=`ls $RSSMAIL | sort -g | tail -n2 | head -n1`
		last_b=`ls $RSSMAIL | sort -g | tail -n1 | head -n1`
	fi

	comm -13 <(sort $RSSMAIL/$last_a/list) <(sort $RSSMAIL/$last_b/list) > $RSSMAIL/$last_b/list_cut
}

webcontent(){

link=$1


case $link in

(*news.ycombinator.com*)
    rm -fr /tmp/webcontent*
    w3m -dump $link | sed 's/.*next \[.\]/=====/g' > /tmp/webcontent
    csplit -s /tmp/webcontent -f /tmp/webcontent --suppress-matched '/=====/' '{*}'
    [ -e /tmp/webcontent01 ] && cat /tmp/webcontent01
    ;;

esac
}

rssmail_server(){
    [ "$rssmail_ml" = "true" ] && learning.configure $HOME/servers/avxhome/learning >/dev/null
	[ -e /usr/bin/rsstail ] || pkg install rsstail
	[ -e /usr/bin/mutt ] || pkg install mutt
	mkdir -p $RSSMAIL

	cd 
	rssfeeds=`cat ~/.newsbeuter/urls | grep -v '^#' | sed -e 's/^/-u "/g' -e 's/$/"/g' | paste -d' ' -s`
	continue_until_title=0
	echo rsstail $rssfeeds -i10 -zP -ld | bash | while read line
	do
		line_escaped=`echo $line | sed -e 's/\[/\\\[/g' -e 's/\]/\\\]/g' -e 's/\*/\\\*/g'`
		[ "$(echo $line | egrep '^Title:')" != "" ] && echo $line >> ~/servers/rssmail/rsstitles2
		[ "$(echo $line | egrep '^Title:')" != "" ] && grep "^$line_escaped\$" ~/servers/rssmail/rsstitles >/dev/null && continue_until_title=1 && continue
		[ "$(echo $line | egrep '^Title:')" != "" ] && continue_until_title=0
		[ $continue_until_title -eq 1 ] && continue

		previous=$current

		if [ "$(echo $line | egrep '^Title:')" != "" ] && [ "$previous" = "link" ]
		then
            title_ml=$title
            source ~/.dotfiles/source/.shell/learning
            [ "$rssmail_ml" = "true" ] && learning.configure $HOME/servers/avxhome/learning >/dev/null
            [ "$rssmail_ml" = "true" ] && [ $(echo $title | learning.classify - ) = "true" ] && title_ml="[kword] $title"
            title_outbox=$(echo $title_ml | sed -e 's|/||g')
            echo "\e[31m $title_ml \e[0m $link "

            [ $rssmail_webcontent = false ] && (echo $link)                         > /tmp/rssmailcontent
            [ $rssmail_webcontent = true  ] && (echo $link; echo; webcontent $link) > /tmp/rssmailcontent

            [ "$outbox" != "" ] && cat /tmp/rssmailcontent > $outbox/$(date +%y%m%d-%H%M%S)_$title_outbox
            cat /tmp/rssmailcontent | $MAILCMD -F ~/.mutt/muttrc_$(( $(date +%s) % $(ls ~/.mutt/muttrc_* | wc -l) )) -s "$title_ml" -- pablo.aledo.rss@gmail.com

            sleep 1
		fi

		case $line in
			(Title:*)       title=`echo $line       | sed 's/Title://g'`; current="title";;
			(Link:*)        link=`echo $line        | sed 's/Link://g'`; current="link";;
			(Description:*) description=`echo $line | sed 's/Description://g'`; current="description";;
		esac

		if [ "$current" = "description" ] && [ "$previous" = "link" ]
		then
            title_ml=$title
            source ~/.dotfiles/source/.shell/learning
            [ "$rssmail_ml" = "true" ] && learning.configure $HOME/servers/avxhome/learning >/dev/null
            [ "$rssmail_ml" = "true" ] && [ $(echo $title | learning.classify - ) = "true" ] && title_ml="[kword] $title"
            title_outbox=$(echo $title_ml | sed -e 's|/||g')
			echo "\e[31m $title_ml \e[0m $link "
			echo "$title_ml -> $link" >> $RSSMAIL/map

            [ $rssmail_webcontent = false ] && (echo $link; echo $description)                   > /tmp/rssmailcontent
            [ $rssmail_webcontent = true  ] && (echo $link; echo $description; webcontent $link) > /tmp/rssmailcontent

            [ "$outbox" != "" ] && cat /tmp/rssmailcontent > $outbox/$(date +%y%m%d-%H%M%S)_$title_outbox
            cat /tmp/rssmailcontent | $MAILCMD -e "set content_type=text/html" -F ~/.mutt/muttrc_$(( $(date +%s) % $(ls ~/.mutt/muttrc_* | wc -l) )) -s "$title_ml" -- pablo.aledo.rss@gmail.com

            sleep 1
		fi

		[ "$(echo $line | egrep '^Title:')" != "" ] && echo $line >> ~/servers/rssmail/rsstitles

	done
}
