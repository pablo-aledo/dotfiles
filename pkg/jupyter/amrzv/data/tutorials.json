[
    {
        "name": "RSNA Pneumonia Detection Challenge (MD.ai API)",
        "description": "The basics of parsing the competition dataset, training using a detector basd on the Mask-RCNN algorithm for object detection and instance segmentation",
        "author": [
            [
                "tmoneyx01",
                "https://github.com/tmoneyx01"
            ]
        ],
        "links": [
            [
                "arxiv",
                "https://arxiv.org/abs/1703.06870"
            ],
            [
                "kaggle",
                "https://www.kaggle.com/c/rsna-pneumonia-detection-challenge"
            ],
            [
                "annotator",
                "https://public.md.ai/annotator/project/LxR6zdR2/workspace"
            ],
            [
                "git",
                "https://github.com/mdai/mdai-client-py"
            ],
            [
                "docs",
                "https://docs.md.ai/"
            ]
        ],
        "colab": "https://colab.research.google.com/github/mdai/ml-lessons/blob/master/lesson3-rsna-pneumonia-detection-mdai-client-lib.ipynb",
        "update": 1535546403.0
    },
    {
        "name": "Transfer learning and fine-tuning",
        "description": "You will learn how to classify images of cats and dogs by using transfer learning from a pre-trained network",
        "author": [
            [
                "Fran√ßois Chollet",
                "https://fchollet.com/"
            ]
        ],
        "links": [
            [
                "wiki",
                "https://en.wikipedia.org/wiki/Transfer_learning"
            ],
            [
                "paperswithcode",
                "https://paperswithcode.com/task/transfer-learning"
            ]
        ],
        "colab": "https://colab.research.google.com/github/tensorflow/docs/blob/master/site/en/tutorials/images/transfer_learning.ipynb",
        "update": 1622633984.0
    },
    {
        "name": "DeepDream",
        "description": "This tutorial contains a minimal implementation of DeepDream: an experiment that visualizes the patterns learned by a neural network",
        "author": [
            [
                "Billy Lamberta",
                "https://github.com/lamberta"
            ]
        ],
        "links": [
            [
                "blog post",
                "https://ai.googleblog.com/2015/06/inceptionism-going-deeper-into-neural.html"
            ],
            [
                "arxiv",
                "https://arxiv.org/pdf/1409.4842.pdf"
            ],
            [
                "wiki",
                "https://en.wikipedia.org/wiki/Inception"
            ]
        ],
        "colab": "https://colab.research.google.com/github/tensorflow/docs/blob/master/site/en/tutorials/generative/deepdream.ipynb",
        "update": 1615569317.0
    },
    {
        "name": "Neural style transfer",
        "description": "This tutorial uses deep learning to compose one image in the style of another image",
        "author": [
            [
                "Billy Lamberta",
                "https://github.com/lamberta"
            ]
        ],
        "links": [
            [
                "arxiv",
                "https://arxiv.org/abs/1508.06576"
            ]
        ],
        "colab": "https://colab.research.google.com/github/tensorflow/docs/blob/master/site/en/tutorials/generative/style_transfer.ipynb",
        "update": 1623781696.0
    },
    {
        "name": "Adversarial FGSM",
        "description": "This tutorial creates an adversarial example using the Fast Gradient Signed Method attack. This was one of the first and most popular attacks to fool a neural network.",
        "author": [
            [
                "Billy Lamberta",
                "https://github.com/lamberta"
            ]
        ],
        "links": [
            [
                "arxiv",
                "https://arxiv.org/abs/1412.6572"
            ],
            [
                "tf",
                "https://www.tensorflow.org/versions/r2.0/api_docs/python/tf/keras/applications/MobileNetV2"
            ],
            [
                "imagenet",
                "http://www.image-net.org/"
            ]
        ],
        "colab": "https://colab.research.google.com/github/tensorflow/docs/blob/master/site/en/tutorials/generative/adversarial_fgsm.ipynb",
        "update": 1615569317.0
    },
    {
        "name": "Autoencoders",
        "description": "This tutorial introduces autoencoders with three examples: the basics, image denoising, and anomaly detection",
        "author": [
            [
                "Google",
                "https://www.tensorflow.org/"
            ]
        ],
        "links": [
            [
                "book",
                "https://www.deeplearningbook.org/contents/autoencoders.html"
            ],
            [
                "data",
                "http://www.timeseriesclassification.com/description.php?Dataset=ECG5000"
            ],
            [
                "blog post",
                "https://blog.keras.io/building-autoencoders-in-keras.html"
            ],
            [
                "examples",
                "https://anomagram.fastforwardlabs.com/#/"
            ],
            [
                "paperswithcode",
                "https://paperswithcode.com/method/autoencoder"
            ]
        ],
        "colab": "https://colab.research.google.com/github/tensorflow/docs/blob/master/site/en/tutorials/generative/autoencoder.ipynb",
        "update": 1623175733.0
    },
    {
        "name": "CVAE",
        "description": "This notebook demonstrates how train a Variational Autoencoder on the MNIST dataset",
        "author": [
            [
                "Billy Lamberta",
                "https://github.com/lamberta"
            ]
        ],
        "links": [
            [
                "arxiv",
                "https://arxiv.org/abs/1312.6114"
            ],
            [
                "arxiv",
                "https://arxiv.org/abs/1401.4082"
            ]
        ],
        "colab": "https://colab.research.google.com/github/tensorflow/docs/blob/master/site/en/tutorials/generative/cvae.ipynb",
        "update": 1616427923.0
    },
    {
        "name": "CycleGAN",
        "description": "This notebook demonstrates unpaired image to image translation using conditional GAN's",
        "author": [
            [
                "Billy Lamberta",
                "https://github.com/lamberta"
            ]
        ],
        "links": [
            [
                "arxiv",
                "https://arxiv.org/abs/1703.10593"
            ],
            [
                "tf",
                "https://www.tensorflow.org/datasets/catalog/cycle_gan"
            ]
        ],
        "colab": "https://colab.research.google.com/github/tensorflow/docs/blob/master/site/en/tutorials/generative/cyclegan.ipynb",
        "update": 1622641901.0
    },
    {
        "name": "DCGAN",
        "description": "This tutorial demonstrates how to generate images of handwritten digits using a Deep Convolutional Generative Adversarial Network",
        "author": [
            [
                "Billy Lamberta",
                "https://github.com/lamberta"
            ]
        ],
        "links": [
            [
                "arxiv",
                "https://arxiv.org/abs/1511.06434"
            ],
            [
                "kaggle",
                "https://www.kaggle.com/jessicali9530/celeba-dataset"
            ],
            [
                "arxiv",
                "https://arxiv.org/abs/1701.00160"
            ]
        ],
        "colab": "https://colab.research.google.com/github/tensorflow/docs/blob/master/site/en/tutorials/generative/dcgan.ipynb",
        "update": 1615569799.0
    },
    {
        "name": "Pix2Pix",
        "description": "This notebook demonstrates image to image translation using conditional GAN's",
        "author": [
            [
                "Billy Lamberta",
                "https://github.com/lamberta"
            ]
        ],
        "links": [
            [
                "arxiv",
                "https://arxiv.org/abs/1611.07004"
            ],
            [
                "data",
                "https://people.eecs.berkeley.edu/~tinghuiz/projects/pix2pix/datasets/"
            ]
        ],
        "colab": "https://colab.research.google.com/github/tensorflow/docs/blob/master/site/en/tutorials/generative/pix2pix.ipynb",
        "update": 1624038717.0
    },
    {
        "name": "Simple audio recognition",
        "description": "This tutorial will show you how to build a basic speech recognition network that recognizes ten different words",
        "author": [
            [
                "Google",
                "https://www.tensorflow.org/"
            ]
        ],
        "links": [
            [
                "tf",
                "https://www.tensorflow.org/datasets/catalog/speech_commands"
            ],
            [
                "coursera",
                "https://www.coursera.org/lecture/audio-signal-processing/stft-2-tjEQe"
            ],
            [
                "tf.js",
                "https://codelabs.developers.google.com/codelabs/tensorflowjs-audio-codelab/index.html#0"
            ],
            [
                "paperswithcode",
                "https://paperswithcode.com/task/speech-recognition"
            ]
        ],
        "colab": "https://colab.research.google.com/github/tensorflow/docs/blob/master/site/en/tutorials/audio/simple_audio.ipynb",
        "update": 1617718493.0
    },
    {
        "name": "Image classification",
        "description": "This tutorial shows how to classify images of flowers",
        "author": [
            [
                "Billy Lamberta",
                "https://github.com/lamberta"
            ]
        ],
        "links": [
            [
                "paperswithcode",
                "https://paperswithcode.com/task/image-classification"
            ]
        ],
        "colab": "https://colab.research.google.com/github/tensorflow/docs/blob/master/site/en/tutorials/images/classification.ipynb",
        "update": 1610039013.0
    },
    {
        "name": "CNN",
        "description": "This tutorial demonstrates training a simple Convolutional Neural Network to classify CIFAR images",
        "author": [
            [
                "Billy Lamberta",
                "https://github.com/lamberta"
            ]
        ],
        "links": [
            [
                "link",
                "https://developers.google.com/machine-learning/glossary/#convolutional_neural_network"
            ],
            [
                "cifar",
                "https://www.cs.toronto.edu/~kriz/cifar.html"
            ]
        ],
        "colab": "https://colab.research.google.com/github/tensorflow/docs/blob/master/site/en/tutorials/images/cnn.ipynb",
        "update": 1621624908.0
    },
    {
        "name": "Data augmentation",
        "description": "This tutorial demonstrates data augmentation: a technique to increase the diversity of your training set by applying random transformations such as image rotation",
        "author": [
            [
                "Billy Lamberta",
                "https://github.com/lamberta"
            ]
        ],
        "links": [
            [
                "wiki",
                "https://en.wikipedia.org/wiki/Data_augmentation"
            ],
            [
                "tf",
                "https://www.tensorflow.org/datasets/catalog/tf_flowers"
            ],
            [
                "paperswithcode",
                "https://paperswithcode.com/task/data-augmentation"
            ]
        ],
        "colab": "https://colab.research.google.com/github/tensorflow/docs/blob/master/site/en/tutorials/images/data_augmentation.ipynb",
        "update": 1620285728.0
    },
    {
        "name": "Image segmentation",
        "description": "This tutorial focuses on the task of image segmentation, using a modified U-Net",
        "author": [
            [
                "Billy Lamberta",
                "https://github.com/lamberta"
            ]
        ],
        "links": [
            [
                "u-net",
                "https://lmb.informatik.uni-freiburg.de/people/ronneber/u-net/"
            ],
            [
                "data",
                "https://www.robots.ox.ac.uk/~vgg/data/pets/"
            ],
            [
                "kaggle",
                "https://www.kaggle.com/c/carvana-image-masking-challenge/overview"
            ]
        ],
        "colab": "https://colab.research.google.com/github/tensorflow/docs/blob/master/site/en/tutorials/images/segmentation.ipynb",
        "update": 1620841180.0
    },
    {
        "name": "Integrated gradients",
        "description": "This tutorial demonstrates how to implement Integrated Gradients, an Explainable AI technique",
        "author": [
            [
                "Google",
                "https://www.tensorflow.org/"
            ]
        ],
        "links": [
            [
                "arxiv",
                "https://arxiv.org/abs/1703.01365"
            ],
            [
                "wiki",
                "https://en.wikipedia.org/wiki/Explainable_artificial_intelligence"
            ],
            [
                "wiki",
                "https://en.wikipedia.org/wiki/Linear_interpolation"
            ],
            [
                "wiki",
                "https://en.wikipedia.org/wiki/Riemann_sum"
            ],
            [
                "git",
                "https://github.com/GoogleCloudPlatform/training-data-analyst/tree/master/blogs/integrated_gradients"
            ],
            [
                "visualizing",
                "https://distill.pub/2020/attribution-baselines/"
            ]
        ],
        "colab": "https://colab.research.google.com/github/tensorflow/docs/blob/master/site/en/tutorials/interpretability/integrated_gradients.ipynb",
        "update": 1608176215.0
    },
    {
        "name": "Actor-Critic",
        "description": "This tutorial demonstrates how to implement the Actor-Critic method using TensorFlow to train an agent on the Open AI Gym CartPole-V0 environment",
        "author": [
            [
                "Mark Daoust",
                "https://github.com/MarkDaoust"
            ]
        ],
        "links": [
            [
                "neurips",
                "https://papers.nips.cc/paper/1786-actor-critic-algorithms.pdf"
            ],
            [
                "gym",
                "https://gym.openai.com/"
            ],
            [
                "neurips",
                "https://papers.nips.cc/paper/1713-policy-gradient-methods-for-reinforcement-learning-with-function-approximation.pdf"
            ],
            [
                "wiki",
                "https://en.wikipedia.org/wiki/Temporal_difference_learning"
            ]
        ],
        "colab": "https://colab.research.google.com/github/tensorflow/docs/blob/master/site/en/tutorials/reinforcement_learning/actor_critic.ipynb",
        "update": 1617644915.0
    },
    {
        "name": "Classify text with BERT",
        "description": "This tutorial contains complete code to fine-tune BERT to perform sentiment analysis on a dataset of plain-text IMDB movie reviews",
        "author": [
            [
                "Google",
                "https://www.tensorflow.org/"
            ]
        ],
        "links": [
            [
                "arxiv",
                "https://arxiv.org/abs/1810.04805"
            ],
            [
                "data",
                "https://ai.stanford.edu/~amaas/data/sentiment/"
            ],
            [
                "arxiv",
                "https://arxiv.org/abs/1711.05101"
            ],
            [
                "tf",
                "https://tfhub.dev/google/collections/bert/1"
            ],
            [
                "paperswithcode",
                "https://paperswithcode.com/task/text-classification"
            ]
        ],
        "colab": "https://colab.research.google.com/github/tensorflow/text/blob/master/docs/tutorials/classify_text_with_bert.ipynb",
        "update": 1622128383.0
    },
    {
        "name": "Image captioning",
        "description": "Given an image our goal is to generate a caption",
        "author": [
            [
                "Billy Lamberta",
                "https://github.com/lamberta"
            ]
        ],
        "links": [
            [
                "arxiv",
                "https://arxiv.org/abs/1502.03044"
            ],
            [
                "data",
                "https://cocodataset.org/#home"
            ]
        ],
        "colab": "https://colab.research.google.com/github/tensorflow/docs/blob/master/site/en/tutorials/text/image_captioning.ipynb",
        "update": 1621969716.0
    },
    {
        "name": "NMT with attention",
        "description": "This notebook trains a seq2seq model for Spanish to English translation",
        "author": [
            [
                "Billy Lamberta",
                "https://github.com/lamberta"
            ]
        ],
        "links": [
            [
                "arxiv",
                "https://arxiv.org/abs/1409.0473"
            ],
            [
                "wiki",
                "https://en.wikipedia.org/wiki/Neural_machine_translation"
            ],
            [
                "data",
                "http://www.manythings.org/anki/"
            ],
            [
                "arxiv",
                "https://arxiv.org/abs/1508.04025v5"
            ]
        ],
        "colab": "https://colab.research.google.com/github/tensorflow/text/blob/master/docs/tutorials/nmt_with_attention.ipynb",
        "update": 1623349137.0
    },
    {
        "name": "GLUE using BERT on TPU",
        "description": "This tutorial contains complete end-to-end code to train models on a TPU",
        "author": [
            [
                "Google",
                "https://www.tensorflow.org/"
            ]
        ],
        "links": [
            [
                "GLUE",
                "https://gluebenchmark.com/"
            ],
            [
                "arxiv",
                "https://arxiv.org/abs/1810.04805"
            ],
            [
                "tf",
                "https://www.tensorflow.org/guide/tpu"
            ]
        ],
        "colab": "https://colab.research.google.com/github/tensorflow/text/blob/master/docs/tutorials/bert_glue.ipynb",
        "update": 1621974634.0
    },
    {
        "name": "Text classification with RNN",
        "description": "This text classification tutorial trains a recurrent neural network on the IMDB large movie review dataset for sentiment analysis",
        "author": [
            [
                "Billy Lamberta",
                "https://github.com/lamberta"
            ]
        ],
        "links": [
            [
                "link",
                "https://developers.google.com/machine-learning/glossary/#recurrent_neural_network"
            ],
            [
                "data",
                "http://ai.stanford.edu/~amaas/data/sentiment/"
            ],
            [
                "paperswithcode",
                "https://paperswithcode.com/task/text-classification"
            ]
        ],
        "colab": "https://colab.research.google.com/github/tensorflow/text/blob/master/docs/tutorials/text_classification_rnn.ipynb",
        "update": 1621636480.0
    },
    {
        "name": "Text generation with RNN",
        "description": "This tutorial demonstrates how to generate text using a character-based RNN",
        "author": [
            [
                "Billy Lamberta",
                "https://github.com/lamberta"
            ]
        ],
        "links": [
            [
                "link",
                "http://karpathy.github.io/2015/05/21/rnn-effectiveness/"
            ],
            [
                "paperswithcode",
                "https://paperswithcode.com/task/text-generation"
            ]
        ],
        "colab": "https://colab.research.google.com/github/tensorflow/text/blob/master/docs/tutorials/text_generation.ipynb",
        "update": 1620855370.0
    },
    {
        "name": "Transformer",
        "description": "This tutorial trains a Transformer model to translate Portuguese to English",
        "author": [
            [
                "Billy Lamberta",
                "https://github.com/lamberta"
            ]
        ],
        "links": [
            [
                "arxiv",
                "https://arxiv.org/abs/1706.03762"
            ],
            [
                "link",
                "https://deepmind.com/blog/article/alphastar-mastering-real-time-strategy-game-starcraft-ii"
            ],
            [
                "arxiv",
                "https://arxiv.org/abs/1903.03878"
            ],
            [
                "git",
                "https://github.com/neulab/word-embeddings-for-nmt"
            ]
        ],
        "colab": "https://colab.research.google.com/github/tensorflow/text/blob/master/docs/tutorials/transformer.ipynb",
        "update": 1623722037.0
    },
    {
        "name": "Word2Vec",
        "description": "Word2Vec is not a singular algorithm, rather, it is a family of model architectures and optimizations that can be used to learn word embeddings from large datasets",
        "author": [
            [
                "Google",
                "https://www.tensorflow.org/"
            ]
        ],
        "links": [
            [
                "arxiv",
                "https://arxiv.org/abs/1301.3781"
            ],
            [
                "neurips",
                "https://papers.nips.cc/paper/5021-distributed-representations-of-words-and-phrases-and-their-compositionality.pdf"
            ],
            [
                "projector",
                "http://projector.tensorflow.org/"
            ],
            [
                "wiki",
                "https://en.wikipedia.org/wiki/Zipf%27s_law"
            ],
            [
                "link",
                "https://web.stanford.edu/class/cs224n/readings/cs224n-2019-notes01-wordvecs1.pdf"
            ],
            [
                "paperswithcode",
                "https://paperswithcode.com/method/cbow-word2vec"
            ],
            [
                "paperswithcode",
                "https://paperswithcode.com/method/skip-gram-word2vec"
            ]
        ],
        "colab": "https://colab.research.google.com/github/tensorflow/docs/blob/master/site/en/tutorials/text/word2vec.ipynb",
        "update": 1618328684.0
    },
    {
        "name": "Word embeddings",
        "description": "This tutorial contains an introduction to word embeddings",
        "author": [
            [
                "Billy Lamberta",
                "https://github.com/lamberta"
            ]
        ],
        "links": [
            [
                "projector",
                "http://projector.tensorflow.org/"
            ],
            [
                "data",
                "http://ai.stanford.edu/~amaas/data/sentiment/"
            ]
        ],
        "colab": "https://colab.research.google.com/github/tensorflow/text/blob/master/docs/guide/word_embeddings.ipynb",
        "update": 1621636480.0
    },
    {
        "name": "Building Your Own Federated Learning Algorithm",
        "description": "In this tutorial, we discuss how to implement federated learning algorithms without deferring to the tff.learning API",
        "author": [
            [
                "Zachary Charles",
                "https://zachcharles.com/"
            ]
        ],
        "links": [
            [
                "tf",
                "https://www.tensorflow.org/federated/api_docs/python/tff/learning/Model"
            ],
            [
                "blog post",
                "https://ai.googleblog.com/2020/05/federated-analytics-collaborative-data.html"
            ],
            [
                "arxiv",
                "https://arxiv.org/abs/1907.08610"
            ],
            [
                "paperswithcode",
                "https://paperswithcode.com/task/federated-learning"
            ]
        ],
        "colab": "https://colab.research.google.com/github/tensorflow/federated/blob/master/docs/tutorials/building_your_own_federated_learning_algorithm.ipynb",
        "update": 1619037525.0
    },
    {
        "name": "Federated Learning for Image Classification",
        "description": "In this tutorial, we use the classic MNIST training example to introduce the Federated Learning API layer of TFF, tff.learning - a set of higher-level interfaces that can be used to perform common types of federated learning tasks, such as federated training, against user-supplied models implemented in TensorFlow",
        "author": [
            [
                "Krzysztof Ostrowski",
                "https://github.com/krzys-ostrowski"
            ]
        ],
        "links": [
            [
                "data",
                "https://www.nist.gov/srd/nist-special-database-19"
            ],
            [
                "arxiv",
                "https://arxiv.org/abs/1602.05629"
            ],
            [
                "medium",
                "https://medium.com/tensorflow/standardizing-on-keras-guidance-on-high-level-apis-in-tensorflow-2-0-bad2b04c819a"
            ],
            [
                "paperswithcode",
                "https://paperswithcode.com/task/federated-learning"
            ],
            [
                "paperswithcode",
                "https://paperswithcode.com/task/image-classification"
            ]
        ],
        "colab": "https://colab.research.google.com/github/tensorflow/federated/blob/master/docs/tutorials/federated_learning_for_image_classification.ipynb",
        "update": 1618847748.0
    },
    {
        "name": "Federated Learning for Text Generation",
        "description": "For this tutorial, we start with a RNN that generates ASCII characters, and refine it via federated learning",
        "author": [
            [
                "Krzysztof Ostrowski",
                "https://github.com/krzys-ostrowski"
            ]
        ],
        "links": [
            [
                "tf",
                "https://www.tensorflow.org/hub"
            ],
            [
                "data1",
                "http://www.ibiblio.org/pub/docs/books/gutenberg/9/98/98.txt"
            ],
            [
                "data2",
                "http://www.ibiblio.org/pub/docs/books/gutenberg/4/46/46.txt"
            ],
            [
                "arxiv",
                "https://arxiv.org/abs/1812.01097"
            ],
            [
                "arxiv",
                "https://arxiv.org/abs/1602.05629"
            ]
        ],
        "colab": "https://colab.research.google.com/github/tensorflow/federated/blob/master/docs/tutorials/federated_learning_for_text_generation.ipynb",
        "update": 1614220409.0
    },
    {
        "name": "Custom Federated Algorithms, Part 1: Introduction to the Federated Core",
        "description": "This tutorial is the first part of a two-part series that demonstrates how to implement custom types of federated algorithms in TensorFlow Federated using the Federated Core - a set of lower-level interfaces that serve as a foundation upon which we have implemented the Federated Learning layer",
        "author": [
            [
                "Krzysztof Ostrowski",
                "https://github.com/krzys-ostrowski"
            ]
        ],
        "links": [
            [
                "tf",
                "https://www.tensorflow.org/federated/federated_core"
            ],
            [
                "tf",
                "https://www.tensorflow.org/federated/federated_learning"
            ],
            [
                "arxiv",
                "https://arxiv.org/abs/1602.05629"
            ],
            [
                "paperswithcode",
                "https://paperswithcode.com/task/federated-learning"
            ]
        ],
        "colab": "https://colab.research.google.com/github/tensorflow/federated/blob/master/docs/tutorials/custom_federated_algorithms_1.ipynb",
        "update": 1614220409.0
    },
    {
        "name": "Custom Federated Algorithms, Part 2: Implementing Federated Averaging",
        "description": "This tutorial is the second part of a two-part series that demonstrates how to implement custom types of federated algorithms in TFF using the Federated Core, which serves as a foundation for the Federated Learning layer",
        "author": [
            [
                "Krzysztof Ostrowski",
                "https://github.com/krzys-ostrowski"
            ]
        ],
        "links": [
            [
                "tf",
                "https://www.tensorflow.org/federated/federated_core"
            ],
            [
                "tf",
                "https://www.tensorflow.org/federated/federated_learning"
            ],
            [
                "git",
                "https://github.com/tensorflow/federated/blob/master/tensorflow_federated/python/learning/federated_averaging.py"
            ],
            [
                "paperswithcode",
                "https://paperswithcode.com/task/federated-learning"
            ]
        ],
        "colab": "https://colab.research.google.com/github/tensorflow/federated/blob/master/docs/tutorials/custom_federated_algorithms_2.ipynb",
        "update": 1614220409.0
    },
    {
        "name": "TFF for Federated Learning Research: Model and Update Compression",
        "description": "In this tutorial, we use the EMNIST dataset to demonstrate how to enable lossy compression algorithms to reduce communication cost in the Federated Averaging algorithm",
        "author": [
            [
                "Weikang Song",
                "https://github.com/swkpku"
            ]
        ],
        "links": [
            [
                "tf",
                "https://www.tensorflow.org/federated/api_docs/python/tff/simulation/datasets/emnist"
            ],
            [
                "arxiv",
                "https://arxiv.org/abs/1602.05629"
            ],
            [
                "tf",
                "https://www.tensorflow.org/federated/api_docs/python/tff/learning/build_federated_averaging_process"
            ],
            [
                "tensor encoding",
                "http://jakubkonecny.com/files/tensor_encoding.pdf"
            ],
            [
                "paperswithcode",
                "https://paperswithcode.com/task/federated-learning"
            ]
        ],
        "colab": "https://colab.research.google.com/github/tensorflow/federated/blob/master/docs/tutorials/tff_for_federated_learning_research_compression.ipynb",
        "update": 1619034829.0
    },
    {
        "name": "High-performance simulations with TFF",
        "description": "This tutorial will describe how to setup high-performance simulations with TFF in a variety of common scenarios",
        "author": [
            [
                "Krzysztof Ostrowski",
                "https://github.com/krzys-ostrowski"
            ]
        ],
        "links": [
            [
                "paperswithcode",
                "https://paperswithcode.com/task/federated-learning"
            ]
        ],
        "colab": "https://colab.research.google.com/github/tensorflow/federated/blob/master/docs/tutorials/simulations.ipynb",
        "update": 1618847748.0
    },
    {
        "name": "High-performance Simulation with Kubernetes",
        "description": "This tutorial will describe how to set up high-performance simulation using a TFF runtime running on Kubernetes",
        "author": [
            [
                "Jason Roselander",
                "https://github.com/roselander"
            ]
        ],
        "links": [
            [
                "GKE",
                "https://cloud.google.com/kubernetes-engine/"
            ],
            [
                "shell",
                "https://cloud.google.com/shell/"
            ],
            [
                "paperswithcode",
                "https://paperswithcode.com/task/federated-learning"
            ]
        ],
        "colab": "https://colab.research.google.com/github/tensorflow/federated/blob/master/docs/tutorials/high_performance_simulation_with_kubernetes.ipynb",
        "update": 1618847748.0
    },
    {
        "name": "Introduction to the TensorFlow Models NLP library",
        "description": "You will learn how to build transformer-based models for common NLP tasks including pretraining, span labelling and classification using the building blocks from NLP modeling library",
        "author": [
            [
                "Chen Chen",
                "https://github.com/chenGitHuber"
            ]
        ],
        "links": [
            [
                "git",
                "https://github.com/tensorflow/models/tree/master/official/nlp/modeling"
            ],
            [
                "arxiv",
                "https://arxiv.org/abs/1810.04805"
            ]
        ],
        "colab": "https://colab.research.google.com/github/tensorflow/models/blob/master/official/colab/nlp/nlp_modeling_library_intro.ipynb",
        "update": 1623003030.0
    },
    {
        "name": "Train a GPT-2 Text-Generating Model",
        "description": "Retrain an advanced text generating neural network on any text dataset for free on a GPU using Colaboratory using aitextgen!",
        "author": [
            [
                "Max Woolf",
                "https://minimaxir.com/"
            ]
        ],
        "links": [
            [
                "git",
                "https://github.com/minimaxir/aitextgen"
            ],
            [
                "docs",
                "https://docs.aitextgen.io/"
            ],
            [
                "data",
                "https://raw.githubusercontent.com/karpathy/char-rnn/master/data/tinyshakespeare/input.txt"
            ],
            [
                "paperswithcode",
                "https://paperswithcode.com/task/text-generation"
            ]
        ],
        "colab": "https://colab.research.google.com/drive/15qBZx5y9rdaQSyWpsreMDnTiZ5IlN0zD",
        "update": 1621222440.007
    },
    {
        "name": "Custom GPT-2 + Tokenizer",
        "description": "Train a custom GPT-2 model for free on a GPU using aitextgen!",
        "author": [
            [
                "Max Woolf",
                "https://minimaxir.com/"
            ]
        ],
        "links": [
            [
                "git",
                "https://github.com/minimaxir/aitextgen"
            ],
            [
                "docs",
                "https://docs.aitextgen.io/"
            ],
            [
                "data",
                "https://raw.githubusercontent.com/karpathy/char-rnn/master/data/tinyshakespeare/input.txt"
            ]
        ],
        "colab": "https://colab.research.google.com/drive/144MdX5aLqrQ3-YW-po81CQMrD6kpgpYh",
        "update": 1621222464.69
    },
    {
        "name": "YOLOv4",
        "description": "This tutorial will help you build YOLOv4 easily in the cloud with GPU enabled so that you can run object detections in milliseconds!",
        "author": [
            [
                "Aleksey Bochkovskiy",
                "http://www.alexeyab.com/"
            ]
        ],
        "links": [
            [
                "arxiv",
                "https://arxiv.org/abs/2004.10934"
            ],
            [
                "arxiv",
                "https://arxiv.org/abs/2011.08036"
            ],
            [
                "git",
                "https://github.com/AlexeyAB/darknet/wiki"
            ],
            [
                "project",
                ""
            ],
            [
                "reddit",
                "https://www.reddit.com/r/MachineLearning/comments/gydxzd/p_yolov4_the_most_accurate_realtime_neural/"
            ],
            [
                "medium",
                "https://alexeyab84.medium.com/yolov4-the-most-accurate-real-time-neural-network-on-ms-coco-dataset-73adfd3602fe"
            ],
            [
                "medium",
                "https://alexeyab84.medium.com/scaled-yolo-v4-is-the-best-neural-network-for-object-detection-on-ms-coco-dataset-39dfa22fa982"
            ],
            [
                "youtube",
                "https://youtu.be/1_SiUOYUoOI"
            ],
            [
                "youtube",
                "https://youtu.be/YDFf-TqJOFE"
            ]
        ],
        "colab": "https://colab.research.google.com/drive/1_GdoqCJWXsChrOiY8sZMr_zbr_fH-0Fg",
        "update": 1593048824.334
    },
    {
        "name": "YOLOv5 on Custom Objects",
        "description": "This notebook shows training on your own custom objects",
        "author": [
            [
                "Jacob Solawetz",
                "https://blog.roboflow.com/author/jacob/"
            ]
        ],
        "links": [
            [
                "git",
                "https://github.com/ultralytics/yolov5"
            ],
            [
                "blog post",
                "https://blog.roboflow.com/how-to-train-yolov5-on-a-custom-dataset/"
            ],
            [
                "data",
                "https://public.roboflow.ai/object-detection/bccd"
            ]
        ],
        "colab": "https://colab.research.google.com/drive/1gDZ2xcTOgR39tGGs-EZ6i3RTs16wmzZQ",
        "update": 1615413333.317
    },
    {
        "name": "Python Data Science Handbook",
        "description": "Jupyter notebook version of the Python Data Science Handbook by Jake VanderPlas",
        "author": [
            [
                "Jake Vanderplas",
                "http://vanderplas.com/"
            ]
        ],
        "links": [
            [
                "git",
                "https://github.com/jakevdp/PythonDataScienceHandbook"
            ],
            [
                "project",
                "https://jakevdp.github.io/PythonDataScienceHandbook/"
            ]
        ],
        "colab": "https://colab.research.google.com/github/jakevdp/PythonDataScienceHandbook/blob/master/notebooks/Index.ipynb",
        "update": 1502731639.0
    },
    {
        "name": "Transfer Learning in NLP",
        "description": "This notebook accompanies the tutorial given at NAACL 2019 on Transfer Learning in Natural Language Processing",
        "author": [
            [
                "Sebastian Ruder",
                "https://ruder.io/"
            ],
            [
                "Swabha Swayamdipta",
                "https://swabhs.com/"
            ],
            [
                "Thomas Wolf",
                "https://thomwolf.io/"
            ]
        ],
        "links": [
            [
                "git",
                "https://github.com/huggingface/naacl_transfer_learning_tutorial"
            ],
            [
                "data",
                "https://cogcomp.seas.upenn.edu/Data/QA/QC/"
            ],
            [
                "git",
                "https://github.com/HazyResearch/metal"
            ],
            [
                "paperswithcode",
                "https://paperswithcode.com/task/transfer-learning"
            ]
        ],
        "colab": "https://colab.research.google.com/drive/1iDHCYIrWswIKp-n-pOg69xLoZO09MEgf",
        "update": 1559577705.249
    },
    {
        "name": "TensorNetwork",
        "description": "A library for easy and efficient manipulation of tensor networks",
        "author": [
            [
                "Chase Roberts",
                "http://thenerdstation.github.io/"
            ]
        ],
        "links": [
            [
                "git",
                "https://github.com/google/TensorNetwork"
            ],
            [
                "youtube",
                "https://www.youtube.com/watch?v=YN2YBB0viKo"
            ],
            [
                "arxiv",
                "https://arxiv.org/abs/1708.00006"
            ],
            [
                "arxiv",
                "https://arxiv.org/abs/1306.2164"
            ],
            [
                "docs",
                "https://tensornetwork.readthedocs.io/"
            ]
        ],
        "colab": "https://colab.research.google.com/github/google/TensorNetwork/blob/master/colabs/Tensor_Networks_in_Neural_Networks.ipynb",
        "update": 1611185077.0
    },
    {
        "name": "TF-Ranking",
        "description": "This tutorial is an end-to-end walkthrough of training a TensorFlow Ranking neural network model which incorporates sparse textual features",
        "author": [
            [
                "Rama Kumar",
                "https://github.com/ramakumar1729"
            ]
        ],
        "links": [
            [
                "arxiv",
                "https://arxiv.org/abs/1910.09676"
            ],
            [
                "arxiv",
                "https://arxiv.org/abs/1812.00073"
            ],
            [
                "data",
                "http://hamedz.ir/resources/"
            ],
            [
                "arxiv",
                "https://arxiv.org/abs/1905.08957"
            ],
            [
                "git",
                "https://github.com/tensorflow/ranking"
            ],
            [
                "git",
                "https://github.com/tensorflow/serving/blob/master/tensorflow_serving/apis/input.proto#L72"
            ],
            [
                "wiki",
                "https://en.wikipedia.org/wiki/Mean_reciprocal_rank"
            ],
            [
                "wiki",
                "https://en.wikipedia.org/wiki/Discounted_cumulative_gain"
            ],
            [
                "arxiv",
                "https://arxiv.org/abs/1811.04415"
            ]
        ],
        "colab": "https://colab.research.google.com/github/tensorflow/ranking/blob/master/tensorflow_ranking/examples/handling_sparse_features.ipynb",
        "update": 1612409308.0
    },
    {
        "name": "Detectron2",
        "description": "FAIR's next-generation platform for object detection and segmentation",
        "author": [
            [
                "Yuxin Wu",
                "http://ppwwyyxx.com/"
            ]
        ],
        "links": [
            [
                "git",
                "https://github.com/facebookresearch/detectron2"
            ],
            [
                "blog post",
                "https://ai.facebook.com/blog/-detectron2-a-pytorch-based-modular-object-detection-library-/"
            ],
            [
                "docs",
                "https://detectron2.readthedocs.io/en/latest/"
            ],
            [
                "git",
                "https://github.com/matterport/Mask_RCNN/tree/master/samples/balloon"
            ]
        ],
        "colab": "https://colab.research.google.com/drive/16jcaJoc6bCFAQ96jDe2HwtXj7BMD_-m5",
        "update": 1624510212.019
    },
    {
        "name": "Spleeter",
        "description": "Deezer source separation library including pretrained models",
        "author": [
            [
                "Romain Hennequin",
                "http://romain-hennequin.fr/"
            ],
            [
                "Anis Khlif",
                "https://github.com/alreadytaikeune"
            ],
            [
                "F√©lix Voituret",
                "https://github.com/Faylixe"
            ],
            [
                "Manuel Moussallam",
                "https://mmoussallam.github.io/"
            ]
        ],
        "links": [
            [
                "blog post",
                "https://deezer.io/releasing-spleeter-deezer-r-d-source-separation-engine-2b88985e797e"
            ],
            [
                "project",
                "https://research.deezer.com/projects/spleeter.html"
            ],
            [
                "git",
                "https://github.com/deezer/spleeter"
            ],
            [
                "data",
                "https://sigsep.github.io/datasets/musdb.html"
            ]
        ],
        "colab": "https://colab.research.google.com/github/deezer/spleeter/blob/master/spleeter.ipynb",
        "update": 1610311462.0
    },
    {
        "name": "GPT Neo",
        "description": "An implementation of model & data parallel GPT2 & GPT3 -like models, with the ability to scale up to full GPT3 sizes (and possibly more!), using the mesh-tensorflow library",
        "author": [
            [
                "EleutherAI",
                "https://www.eleuther.ai/"
            ]
        ],
        "links": [
            [
                "GPT-2",
                "https://openai.com/blog/better-language-models/"
            ],
            [
                "arxiv",
                "https://arxiv.org/abs/2005.14165"
            ],
            [
                "arxiv",
                "https://arxiv.org/abs/2004.05150"
            ],
            [
                "arxiv",
                "https://arxiv.org/abs/1701.06538"
            ],
            [
                "git",
                "https://github.com/EleutherAI/gpt-neo"
            ],
            [
                "git",
                "https://github.com/tensorflow/mesh"
            ],
            [
                "git",
                "https://github.com/EleutherAI/gpt-neox/"
            ],
            [
                "pretrained",
                "https://the-eye.eu/public/AI/gptneo-release/"
            ]
        ],
        "colab": "https://colab.research.google.com/github/EleutherAI/GPTNeo/blob/master/GPTNeo_example_notebook.ipynb",
        "update": 1616937556.0
    },
    {
        "name": "Lucid Sonic Dreams",
        "description": "Syncs GAN-generated visuals to music",
        "author": [
            [
                "Mikael Alafriz",
                "https://github.com/mikaelalafriz"
            ]
        ],
        "links": [
            [
                "youtube",
                "https://youtu.be/l-nGC-ve7sI"
            ],
            [
                "medium",
                "https://towardsdatascience.com/introducing-lucid-sonic-dreams-sync-gan-art-to-music-with-a-few-lines-of-python-code-b04f88722de1"
            ],
            [
                "git",
                "https://github.com/mikaelalafriz/lucid-sonic-dreams"
            ],
            [
                "git",
                "https://github.com/NVlabs/stylegan2"
            ],
            [
                "git",
                "https://github.com/justinpinkney/awesome-pretrained-stylegan2"
            ]
        ],
        "colab": "https://colab.research.google.com/drive/1Y5i50xSFIuN3V4Md8TB30_GOAtts7RQD",
        "update": 1623185269.03
    },
    {
        "name": "The Autodiff Cookbook",
        "description": "You'll go through a whole bunch of neat autodiff ideas that you can cherry pick for your own work, starting with the basics",
        "author": [
            [
                "Alex Wiltschko",
                "https://github.com/alexbw"
            ],
            [
                "Matthew Johnson",
                "http://people.csail.mit.edu/mattjj/"
            ]
        ],
        "links": [
            [
                "book1",
                "https://mitpress.mit.edu/sites/default/files/titles/content/sicm_edition_2/book.html"
            ],
            [
                "book2",
                "https://mitpress.mit.edu/books/functional-differential-geometry"
            ],
            [
                "wiki",
                "https://en.wikipedia.org/wiki/Truncated_Newton_method"
            ],
            [
                "wiki",
                "https://en.wikipedia.org/wiki/Pullback_(differential_geometry)"
            ],
            [
                "wiki",
                "https://en.wikipedia.org/wiki/Holomorphic_function"
            ],
            [
                "wiki",
                "https://en.wikipedia.org/wiki/Cauchy%E2%80%93Riemann_equations"
            ],
            [
                "arxiv",
                "https://arxiv.org/abs/1406.2572"
            ],
            [
                "arxiv",
                "https://arxiv.org/abs/1706.04454"
            ],
            [
                "arxiv",
                "https://arxiv.org/abs/1802.03451"
            ],
            [
                "arxiv",
                "https://arxiv.org/abs/1811.07062"
            ],
            [
                "tutorial",
                "http://videolectures.net/deeplearning2017_johnson_automatic_differentiation/"
            ],
            [
                "git",
                "https://github.com/google/jax/issues/446#issuecomment-467105048"
            ],
            [
                "git",
                "https://github.com/google/jax#auto-vectorization-with-vmap"
            ],
            [
                "git",
                "https://github.com/hips/autograd"
            ]
        ],
        "colab": "https://colab.research.google.com/github/google/jax/blob/master/docs/notebooks/autodiff_cookbook.ipynb",
        "update": 1623988801.0
    },
    {
        "name": "ruGPT3",
        "description": "Example of inference of RuGPT3XL",
        "author": [
            [
                "Anton Emelyanov",
                "https://github.com/king-menin"
            ]
        ],
        "links": [
            [
                "git",
                "https://github.com/sberbank-ai/ru-gpts"
            ],
            [
                "git",
                "https://github.com/microsoft/DeepSpeedExamples/tree/master/Megatron-LM"
            ],
            [
                "huggingface",
                "https://huggingface.co/transformers/main_classes/model.html#transformers.generation_utils.GenerationMixin.generate"
            ],
            [
                "sparse attention",
                "deepspeed.ai/tutorials/sparse-attention/"
            ],
            [
                "cristofari",
                "https://sbercloud.ru/ru/christofari"
            ]
        ],
        "colab": "https://colab.research.google.com/github/sberbank-ai/ru-gpts/blob/master/examples/ruGPT3XL_generation.ipynb",
        "update": 1613559571.0
    },
    {
        "name": "GPT-J-6B",
        "description": "A 6 billion parameter, autoregressive text generation model trained on The Pile",
        "author": [
            [
                "Ben Wang",
                "https://benwang.dev/"
            ],
            [
                "Aran Komatsuzaki",
                "https://arankomatsuzaki.wordpress.com/about-me/"
            ],
            [
                "Janko Prester",
                "https://www.jankoprester.com/"
            ]
        ],
        "links": [
            [
                "git",
                "https://github.com/kingoflolz/mesh-transformer-jax"
            ],
            [
                "blog post",
                "https://arankomatsuzaki.wordpress.com/2021/06/04/gpt-j/"
            ],
            [
                "web demo",
                "https://6b.eleuther.ai/"
            ],
            [
                "The Pile",
                "https://pile.eleuther.ai/"
            ],
            [
                "git",
                "https://github.com/EleutherAI/gpt-neox"
            ],
            [
                "git",
                "https://github.com/microsoft/DeepSpeed"
            ]
        ],
        "colab": "https://colab.research.google.com/github/kingoflolz/mesh-transformer-jax/blob/master/colab_demo.ipynb",
        "update": 1623619954.0
    },
    {
        "name": "LightAutoML",
        "description": "Framework for automatic classification and regression model creation",
        "author": [
            [
                "Alexander Ryzhkov",
                "https://www.kaggle.com/alexryzhkov"
            ],
            [
                "Anton Vakhrushev",
                "https://www.kaggle.com/btbpanda"
            ],
            [
                "Dmitry Simakov",
                "https://www.kaggle.com/simakov"
            ],
            [
                "Vasiliy Bunakov",
                "https://github.com/VaBun"
            ],
            [
                "Alexander Kirilin",
                "https://github.com/Cybsloth"
            ]
        ],
        "links": [
            [
                "git",
                "https://github.com/sberbank-ai-lab/LightAutoML"
            ],
            [
                "youtube",
                "https://www.youtube.com/watch?v=ci8uqgWFJGg"
            ],
            [
                "youtube",
                "https://www.youtube.com/watch?v=TYu1UG-E9e8"
            ],
            [
                "youtube",
                "https://www.youtube.com/watch?v=4pbO673B9Oo"
            ],
            [
                "tds",
                "https://towardsdatascience.com/lightautoml-preset-usage-tutorial-2cce7da6f936"
            ],
            [
                "blog post",
                "https://analyticsindiamag.com/hands-on-python-guide-to-lama-an-automatic-ml-model-creation-framework/"
            ],
            [
                "docs",
                "https://lightautoml.readthedocs.io/en/latest/"
            ]
        ],
        "colab": "https://colab.research.google.com/github/sberbank-ai-lab/LightAutoML/blob/master/Tutorial_1.%20Create%20your%20own%20pipeline.ipynb",
        "update": 1619520542.0
    },
    {
        "name": "highway-env",
        "description": "A collection of environments for autonomous driving and tactical decision-making tasks",
        "author": [
            [
                "Edouard Leurent",
                "https://edouardleurent.com/"
            ]
        ],
        "links": [
            [
                "docs",
                "https://highway-env.readthedocs.io/en/latest/"
            ],
            [
                "git",
                "https://github.com/eleurent/highway-env"
            ],
            [
                "git",
                "https://github.com/eleurent/rl-agents"
            ],
            [
                "git",
                "https://github.com/eleurent/finite-mdp"
            ],
            [
                "git",
                "https://github.com/openai/baselines/tree/master/baselines/her"
            ],
            [
                "arxiv",
                "https://arxiv.org/abs/2102.03483"
            ],
            [
                "arxiv",
                "https://arxiv.org/abs/2105.05701"
            ]
        ],
        "colab": "https://colab.research.google.com/github/eleurent/highway-env/blob/master/scripts/parking_model_based.ipynb",
        "update": 1615561158.0
    }
]